<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[巴菲猫学技术]]></title>
  <subtitle><![CDATA[苹果越分越少，知识越分越多！]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://bafeimao.net/"/>
  <updated>2015-10-31T06:25:49.000Z</updated>
  <id>http://bafeimao.net/</id>
  
  <author>
    <name><![CDATA[巴菲猫(29283212@qq.com)]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[游戏服务器中的ID生成策略]]></title>
    <link href="http://bafeimao.net/2013/06/17/generate-unique-id-in-distributed-system/"/>
    <id>http://bafeimao.net/2013/06/17/generate-unique-id-in-distributed-system/</id>
    <published>2013-06-17T11:45:37.000Z</published>
    <updated>2015-10-31T06:25:49.000Z</updated>
    <content type="html"><![CDATA[<p>常见的游戏架构和部署中，很多采用分服的一服一库的部署模式，而且运营过程中经常会有合服要求。</p>
<blockquote>
<p>所谓合服就是随着游戏单服活跃用户数不断的下降，为节省资源和提高用户活跃度，在运营过程中将两个或多个服务数据合并到一起的做法。</p>
</blockquote>
<p>合服时经常碰到的一个最大的问题就是：相同表中的记录不能有ID重复的情况发生。如果有重复ID的情况，那么合服时就要写特定的脚本去处理重复ID的问题，这会比较麻烦。</p>
<p>要解决不能有重复ID的情况，最好的办法是让每台服务器上出生的ID都是全局唯一的。</p>
<h4 id="1-_使用UUID">1. 使用UUID</h4><p>首先想到的是<a href="https://en.wikipedia.org/w/index.php?title=Universally_unique_identifier&amp;redirect=no" target="_blank" rel="external">UUID</a>，它天生就是全局唯一的并运用于分布式计算中，UUID是16字节128位长的数字，通常以36字节的字符串表示：</p>
<blockquote>
<p>UUID: 21e58ba8-5c7e-4524-ae8f-079faf987b3b</p>
</blockquote>
<p>由于它太长而且可读性差，因此不用这货。</p>
<h4 id="2-_Flickr的Ticket_Server方案">2. Flickr的Ticket Server方案</h4><p>Flickr的实现方式比较简单巧妙，它是利用两台Ticket Server按指定的步长递增生成ID。将两台服务器的初始偏移值设置不一样，会让两台服务器交替生成ID而不会产生冲突，其配置如下：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">TicketServer1:</span><br><span class="line"><span class="keyword">auto</span>-increment-increment = <span class="number">2</span></span><br><span class="line"><span class="keyword">auto</span>-increment-offset = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">TicketServer2:</span><br><span class="line"><span class="keyword">auto</span>-increment-increment = <span class="number">2</span></span><br><span class="line"><span class="keyword">auto</span>-increment-offset = <span class="number">2</span></span><br></pre></td></tr></table></figure>
<p>这样，TicketServer1将一直生成”奇数ID”，TicketServer2生成“偶数ID”</p>
<p>两台Ticket Server做负载均衡，使用Round-Robin策略轮询访问，避免了单点故障，如果两台不够也可以扩展至更多台。</p>
<p>关于该技术方案的细节请见<a href="http://code.flickr.net/2010/02/08/ticket-servers-distributed-unique-primary-keys-on-the-cheap/" target="_blank" rel="external">官方博客原文(要翻墙)</a>，也可见<a href="http://blog.csdn.net/wangzhen199009/article/details/38761575" target="_blank" rel="external">这篇译文</a></p>
<p><strong>该方案的缺点：</strong></p>
<ol>
<li><p>TicketServer会成为性能瓶颈，当负载较重时数据库写压力较大，对于Flickr这种读频繁写较少的应用来说也许够用，但是对于游戏服务器来说，会有短期内密集生成ID的需求，该方案似乎应付这样的需求会显得有点吃力。</p>
</li>
<li><p>生成的ID不带时间信息，IDC机房信息，或机器ID等信息</p>
</li>
</ol>
<h4 id="3-_MongoDB的ObjectId方案">3. MongoDB的ObjectId方案</h4><p>ObjectId使用了12个字节来存储，每个字节用16进制字符串来表示，所以的表示形式是由24个字符组成，如：507f1f77bcf86cd799439011</p>
<p>ObjectId组成部分有：</p>
<ul>
<li>4字节：UNIX时间戳</li>
<li>3字节：表示运行MongoDB的机器</li>
<li>2字节：表示生成此_id的进程</li>
<li>3字节：由一个随机数开始的计数器生成的值</li>
</ul>
<p><strong>该方案的好处：</strong></p>
<p>ObjectId是可按时间排序的并且带机器ID的，根据ObjectId可以反推得到时间戳和机器ID信息，而且比UUID短。</p>
<p>但是，我们希望最好能够用长整形来表示ID，因为那样既短小不占空间又容易识别。</p>
<h4 id="4-_Twitter的Snowflake算法">4. Twitter的Snowflake算法</h4><p>Snowflake是twitter为解决在分布式系统中高效生成全局ID所提出的解决方案，该算法使用Scale实现的并且已开源，地址在：<a href="https://github.com/twitter/snowflake" target="_blank" rel="external">https://github.com/twitter/snowflake</a></p>
<p>其原理是用一个64位的长整形来储存ID，其内部位的表示如下：</p>
<blockquote>
<p>毫秒时间（41bits）+ datacenterId(5bits) + workerId(5bits) + sequence(12bits)</p>
</blockquote>
<p>该方案的优点明显：</p>
<ul>
<li>生成的ID能够按时间排序，并且可带机器ID，IDC等信息</li>
<li>用64位表示的，储存空间小，并且易读</li>
<li>每台机器可独立生成ID，无需中心节点，无单点故障风险</li>
<li>生成ID高效并且速度快，如果用12位表示sequence，那么每毫秒将可以生成1024个ID</li>
</ul>
<p>在游戏应用中，我们可将内部位调整为如下表现形式：</p>
<blockquote>
<p>毫秒时间（37bits）+ serverId (20bits) + sequence (16bits)</p>
</blockquote>
<p>说明：</p>
<ul>
<li>37bits的毫秒时间可供我们使用约93年</li>
<li>serverId最大可以表示为2^20(1048576)个服务器</li>
<li>每毫秒最多可以生成2^16(65535)个ID</li>
</ul>
<h3 id="总结">总结</h3><p>在分布式应用或游戏服务器中，Snowflake作为全局唯一ID的生成算法具有生产ID迅速高效，无单点故障，ID带丰富的信息，并且可按时间排序等诸多特性，是可靠高效的方案。</p>
<hr>
<h3 id="附录">附录</h3><p>Twitter是用Scale实现该算法并开源的，其中Java版本如下：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line"> * @author zhujuan</span><br><span class="line"> *         From: https://github.com/twitter/snowflake</span><br><span class="line"> *         An object that generates IDs.</span><br><span class="line"> *         This is broken into a separate class in case</span><br><span class="line"> *         we ever want to support multiple worker threads</span><br><span class="line"> *         per process</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> IdWorker &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">static</span> final Logger LOG = LoggerFactory.getLogger(IdWorker.<span class="keyword">class</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> workerId;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> datacenterId;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> sequence = <span class="number">0L</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> twepoch = <span class="number">1288834974657L</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> workerIdBits = <span class="number">5L</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> datacenterIdBits = <span class="number">5L</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> maxWorkerId = -<span class="number">1L</span> ^ (-<span class="number">1L</span> &lt;&lt; workerIdBits);</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> maxDatacenterId = -<span class="number">1L</span> ^ (-<span class="number">1L</span> &lt;&lt; datacenterIdBits);</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> sequenceBits = <span class="number">12L</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> workerIdShift = sequenceBits;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> datacenterIdShift = sequenceBits + workerIdBits;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> timestampLeftShift = sequenceBits + workerIdBits + datacenterIdBits;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> sequenceMask = -<span class="number">1L</span> ^ (-<span class="number">1L</span> &lt;&lt; sequenceBits);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> lastTimestamp = -<span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">IdWorker</span><span class="params">(<span class="keyword">long</span> workerId, <span class="keyword">long</span> datacenterId)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// sanity check for workerId</span></span><br><span class="line">        <span class="keyword">if</span> (workerId &gt; maxWorkerId || workerId &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(String.format(<span class="string">"worker Id can't be greater than %d or less than 0"</span>, maxWorkerId));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (datacenterId &gt; maxDatacenterId || datacenterId &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(String.format(<span class="string">"datacenter Id can't be greater than %d or less than 0"</span>, maxDatacenterId));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">this</span>.workerId = workerId;</span><br><span class="line">        <span class="keyword">this</span>.datacenterId = datacenterId;</span><br><span class="line">        LOG.info(String.format(<span class="string">"worker starting. timestamp left shift %d, datacenter id bits %d, worker id bits %d, sequence bits %d, workerid %d"</span>, timestampLeftShift, datacenterIdBits, workerIdBits, sequenceBits, workerId));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> synchronized <span class="keyword">long</span> <span class="title">nextId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">long</span> timestamp = timeGen();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (timestamp &lt; lastTimestamp) &#123;</span><br><span class="line">            LOG.error(String.format(<span class="string">"clock is moving backwards.  Rejecting requests until %d."</span>, lastTimestamp));</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(String.format(<span class="string">"Clock moved backwards.  Refusing to generate id for %d milliseconds"</span>, lastTimestamp - timestamp));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (lastTimestamp == timestamp) &#123;</span><br><span class="line">            sequence = (sequence + <span class="number">1</span>) &amp; sequenceMask;</span><br><span class="line">            <span class="keyword">if</span> (sequence == <span class="number">0</span>) &#123;</span><br><span class="line">                timestamp = tilNextMillis(lastTimestamp);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            sequence = <span class="number">0L</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        lastTimestamp = timestamp;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> ((timestamp - twepoch) &lt;&lt; timestampLeftShift) | (datacenterId &lt;&lt; datacenterIdShift) | (workerId &lt;&lt; workerIdShift) | sequence;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">long</span> <span class="title">tilNextMillis</span><span class="params">(<span class="keyword">long</span> lastTimestamp)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">long</span> timestamp = timeGen();</span><br><span class="line">        <span class="keyword">while</span> (timestamp &lt;= lastTimestamp) &#123;</span><br><span class="line">            timestamp = timeGen();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> timestamp;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">long</span> <span class="title">timeGen</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> System.currentTimeMillis();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p>常见的游戏架构和部署中，很多采用分服的一服一库的部署模式，而且运营过程中经常会有合服要求。</p>
<blockquote>
<p>所谓合服就是随着游戏单服活跃用户数不断的下降，为节省资源和提高用户活跃度，在运营过程中将两个或多个服务数据合并到一起的做法。</p>
</bl]]>
    </summary>
    
      <category term="distributed" scheme="http://bafeimao.net/tags/distributed/"/>
    
      <category term="game" scheme="http://bafeimao.net/tags/game/"/>
    
      <category term="mongodb" scheme="http://bafeimao.net/tags/mongodb/"/>
    
      <category term="redis" scheme="http://bafeimao.net/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[网络游戏中的数据交互]]></title>
    <link href="http://bafeimao.net/2012/11/17/data-interactive-in-game/"/>
    <id>http://bafeimao.net/2012/11/17/data-interactive-in-game/</id>
    <published>2012-11-17T01:49:33.000Z</published>
    <updated>2015-10-31T08:17:09.000Z</updated>
    <content type="html"><![CDATA[<p>设计网络游戏，首先要面对的就是考虑如何实现客户端与服务端的数据交互。</p>
<p>这大体会涉及到两个方面的内容：</p>
<ol>
<li>客户端与服务器之间的通讯协议，</li>
<li>通讯双方使用的数据交换格式</li>
</ol>
<p>通讯协议常用的无外乎两种：1：TCP，2：HTTP</p>
<blockquote>
<p>在一些即时战斗类或战网类游戏中可能还会涉及到客户端之间使用P2P方式连接，以及使用UDP进行传输</p>
</blockquote>
<p>大体上，弱交互的游戏使用HTTP，强交互实时性较强的游戏使用TCP。</p>
<p>但这依赖于具体的使用场景还可以进一步划分，比如：</p>
<blockquote>
<p>在一款实时战斗的手机游戏中，往往使用TCP进行连接，但是聊天功能由于在手机上使用不是很方便，所以聊天就变的弱交互了，因此聊天可以使用HTTP调用单独的聊天API。</p>
</blockquote>
<p><strong>对于HTTP，常用的数据交换格式是：JSON或XML</strong></p>
<p>使用JSON/XML的优点是：</p>
<ol>
<li>使用方便</li>
<li>内容自描述</li>
</ol>
<p>缺点是：</p>
<ol>
<li>传输数据量大了点</li>
<li>Marshall和UnMarshall的时间长了一点</li>
</ol>
<blockquote>
<p>但无所谓，因为他们应用的场景本就是弱交互的环境，因此劣势比起优势可以忽略。</p>
</blockquote>
<p><strong>但对于强交互游戏，数据交互格式就要好好选择了，特别地，在手机游戏中，如何最大限度的减少消息的大小是首要考虑的指标，这将会带来如下几个方面的收益：</strong></p>
<ol>
<li>节省用户流量，为用户省钱（土豪除外）</li>
<li>省服务器带宽，为公司省钱</li>
<li>提高了网络吞吐率（单台服务器网卡可以处理更多的消息）</li>
</ol>
<p>讲了这么多前奏，该轮到大名鼎鼎的<a href="http://code.google.com/p/protobuf/" target="_blank" rel="external">protobuf</a>闪亮登场了，它的优点有：</p>
<ul>
<li>名厂Google出品，有口皆碑，久经考验</li>
<li>数据压缩比高，满足我们指标要求</li>
<li>性能好，Google对性能的抠门程度不用我们担心</li>
<li>支持消息协议的向前和向后兼容（消息协议升级时，既有系统不会受到协议变更的影响）</li>
<li>多语言支持，如C++，Java，Python等（社区提供了非常多的对其他语言支持）</li>
<li>代码自动生成</li>
</ul>
<p>如此多的特性非常适合在游戏应用！！！</p>
<h4 id="题外：">题外：</h4><p>使用protobuf还有有另外一个好处，它自带提供对RPC的支持，这方便了内部系统之间的远程调用，但是遗憾的是之前并没有提供RPC的实现，这需要我们自己实现。这一点不像它的对手Thrift提供的全套的RPC解决方案。</p>
<blockquote>
<p>自行实现基于Protobuf的RPC也不是很难的事，github上又很多基于Mina，Netty或ZeroMQ的实现，有兴趣可以自行去搜索。</p>
</blockquote>
<p>幸运的是，Google最近刚刚开源了基于HTTP/2和ProtoBuf的通用RPC框架的gRPC，</p>
<p>请参见<a href="http://www.infoq.com/cn/news/2015/03/grpc-google-http2-protobuf" target="_blank" rel="external">这篇文章</a>中对gRPC的描述</p>
<p>gRPC的代码托管在Github上：<a href="https://github.com/grpc/grpc" target="_blank" rel="external">https://github.com/grpc/grpc</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>设计网络游戏，首先要面对的就是考虑如何实现客户端与服务端的数据交互。</p>
<p>这大体会涉及到两个方面的内容：</p>
<ol>
<li>客户端与服务器之间的通讯协议，</li>
<li>通讯双方使用的数据交换格式</li>
</ol>
<p>通讯协议常用的无外乎两种：]]>
    </summary>
    
      <category term="game" scheme="http://bafeimao.net/tags/game/"/>
    
      <category term="grpc" scheme="http://bafeimao.net/tags/grpc/"/>
    
      <category term="json" scheme="http://bafeimao.net/tags/json/"/>
    
      <category term="protobuf" scheme="http://bafeimao.net/tags/protobuf/"/>
    
      <category term="rpc" scheme="http://bafeimao.net/tags/rpc/"/>
    
      <category term="thrift" scheme="http://bafeimao.net/tags/thrift/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[VIM常用命令]]></title>
    <link href="http://bafeimao.net/2012/10/17/vim-the-most-common-commands/"/>
    <id>http://bafeimao.net/2012/10/17/vim-the-most-common-commands/</id>
    <published>2012-10-17T03:50:53.000Z</published>
    <updated>2015-10-31T08:13:29.000Z</updated>
    <content type="html"><![CDATA[<h3 id="模式切换">模式切换</h3><p>按下<code>i, I, o, O, a, A, r, R</code>从<code>一般模式</code>进入<code>编辑模式</code>，按<code>ESC</code>从<code>编辑模式</code>退出到<code>一般模式</code></p>
<h3 id="删除操作">删除操作</h3><p><code>dw</code>    ：从光标开始删除到下一个单词的开头<br><code>d2w</code>   ：删除两个单词（到第三个单词的开头）<br><code>de</code>    :   从光标处开始删除到当前单词结尾<br><code>d2e</code>   :   从光标出开始删除到第2个单词结尾<br><code>d$</code>    :   从光标位置删除到行尾<br><code>d0</code>    :   删除行首到光标处内容<br><code>dd</code>    :   删除整行<br><code>2dd</code>   :   删除两行<br><code>d1G,dgg</code>   :   删除第一行到光标行（光标所在行也被删除）<br><code>dG</code>    :   删除光标所在行到最后一行的所有行<br><code>dj</code>    :   删除当前光标所在行以及下一行（<code>j</code>换成<code>k</code>表示删除上一行）<br><code>d2j</code>   :   删除当前行及随后的2行</p>
<p><code>x</code>     :   向后删除一个字符，相当于DELETE)<br><code>X</code>     :   向前删除一个字符，相当于Backspace<br><code>nx，nX</code>     :   连续向后，向前删除n个字符</p>
<h3 id="查找，替换和更改">查找，替换和更改</h3><p><code>r</code>     :   替换光标处的字符，然后键入要替换的字符（一次仅替换一个）<br><code>R</code>     :   连续替<br><code>ce</code>    :   从光标处删除到单词结尾，并进入到编辑模式（和x的区别在于x留在普通模式而不进入编辑模式）(语法格式：<code>c [number] motion</code>)<br><code>c5e</code>   :   删除光标后5个单词并进入到编辑模式<br><code>:n1,n2s/word1/word2/g</code> :   在第 n1 行到 n2 行之间寻找word1并替换成word2。<br><code>:1,$s/word1/word2/g</code>       ：   从第一行到最后一行搜索word1并替换成word2<br><code>:1,$s/word1/word2/gc</code>  :   同上，只是，替换是提示让用户确认</p>
<p><code>/keyword</code>      :   从光标位置向下搜索关键字，如果检索结果有多个，按n可以继续往下搜索下一个，N动作相反<br><code>?keyword</code>      :   从光标位置向前搜索关键字，按n继续向前搜索下一个，N动作相反</p>
<h3 id="移动光标">移动光标</h3><p><code>0</code>   :   行首<br><code>$</code>     :   行尾<br><code>w</code>     :   到下一个单词开头，<br><code>3w</code>    :   到下三个单词开头，</p>
<p><code>e</code>     :   到下一个单词结尾<br><code>2e</code>    :   到下两个单词结尾</p>
<p><code>hjkl</code>  :   ←↓↑→<br><code>30j</code>       :   向下移动30行<br><code>ctrl+f</code>    ：向下移动一页(forward)<br><code>ctrl+b</code>    :   向上移动一页(backward)<br><code>ctrl+d</code>    :   向下移动半页(down)<br><code>ctrl+u</code>    :   向上移动半页(up)<br><code>H,M,L</code>     ：移动到当前页的最顶行，中间行，最低行,最后一行<br><code>G</code>             :   移动到文档的最后一行，<br><code>10G</code>           :   移动到文档开始的第10行<br><code>gg,1G</code>     :   移动到文档的第一行<br><code>n&lt;Enter&gt;</code>  :   光标向下移动n行</p>
<h3 id="复制与粘贴">复制与粘贴</h3><p><code>yy</code>    :   复制光标所在行<br><code>nyy</code>   :   复制光标所在行以及后续行（共n行）<br><code>y2j</code>   :   复制光标所在行以后向下的2行（共3行）<br><code>ye,yw,y0,y$,y2e,y3w,y2j,y1G,yG,ygg</code>        :       y的用法类似命令d的操作，后面可以接数字以及其他对动作范围的限定等等</p>
<p><code>p</code>     :   粘贴行到当前光标所处行的下一行，<br><code>P</code>     :   粘贴到当前光标所处行的上一行</p>
<p><code>J</code> :       将光标所在行与下一行合并</p>
<h3 id="区块操作">区块操作</h3><p><code>ctrl+v</code>    :   确定好复制区块的起始位置，然后按下ctrl+v，然后移动光标，↑←↓→或hjkl选择多个字符或多行，然后可以对区块进行复制（y)或删除(d)</p>
<h3 id="打开，保存与退出">打开，保存与退出</h3><p><code># vim file1 file2 file3</code>   :   一次打开多个文件<br><code>:n</code>    :   切换到下一个文件<br><code>:N</code>    :   切换到上一个文件<br><code>：files</code>    :   查看当前打开的文件列表</p>
<p><code>:w</code>        :       存盘不退出<br><code>:w!</code>       :       强制存盘不退出（比如在修改只读文件的时候，这需要当前用户有写权限）</p>
<p><code>:wq</code>       ：   存盘并退出<br><code>:q</code>        ：       退出<br><code>:q!</code>       ：       强制退出不存盘<br><code>ZZ</code>        ：       如果修改了就存盘退出，如果没修改就退出不存盘<br><code>:w</code>        ：       另存为<br><code>:r</code>        ：       读另外一个文件，附加到当前文件的末尾<br><code>1,5 w file2</code>   ：       将第1到5行存到file2文件中<br><code>:e!</code>   ：       恢复成文件的原始状态<br><code>:! &lt;command&gt;</code>  ：   暂时离开，并执行<command>,例如：:! ls</p>
<h3 id="其他操作">其他操作</h3><p><code>u</code>     ：取消最后一个命令，<br><code>U</code>     ：取消整行上的所有操作<br><code>ctrl+r</code>    ：取消undo操作</p>
<p><code>.</code> :   小数点，重复前面的动作<br><code>:set nu</code>     显示行号<br><code>:set nonu</code>     不显示行号</p>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="模式切换">模式切换</h3><p>按下<code>i, I, o, O, a, A, r, R</code>从<code>一般模式</code>进入<code>编辑模式</code>，按<code>ESC</code>从<code>编辑模式</code>退出到<]]>
    </summary>
    
      <category term="vim" scheme="http://bafeimao.net/tags/vim/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[常见的Web负载均衡技术详解]]></title>
    <link href="http://bafeimao.net/2012/09/25/web-load-balance-technologies-in-detail/"/>
    <id>http://bafeimao.net/2012/09/25/web-load-balance-technologies-in-detail/</id>
    <published>2012-09-25T15:51:01.000Z</published>
    <updated>2015-10-31T08:10:19.000Z</updated>
    <content type="html"><![CDATA[<h3 id="1-_基于镜像站点的负载均衡">1. 基于镜像站点的负载均衡</h3><p>最早的负载均衡技术可以追溯到古老的镜像站点技术，其本质是制作多个站点的拷贝（镜像），然后在网页上提供站点列表，供用户选择，从而达到分流负载的目的。该技术现在仍然被一些如下载站点使用。</p>
<h4 id="优缺点">优缺点</h4><p>该方案最大的特点就是简单；服务端不需要特别的技术支持，只要克隆多个站点即可，制作镜像本质上是文件的同步，因为它更加适合用在静态网站上。</p>
<h3 id="2-_基于HTTP重定向的负载均衡">2. 基于HTTP重定向的负载均衡</h3><h4 id="什么是HTTP重定向">什么是HTTP重定向</h4><blockquote>
<p>HTTP重定向是HTTP代理（如浏览器）与Web服务器共同实现的。服务器通过返回302状态码，以及在HTTP响应的Header中添加Location=url，HTTP代理收到该重定向响应后重新请求location指示的地址，这样就完成了一次HTTP重定向</p>
</blockquote>
<p>HTTP重定向的机制可以用来做负载均衡，具体的调度算法由服务器实现，可以根据地域就近原则，或简单的轮询（Round Robin）或其他调度算法，从而达到将负载分发到多个后端服务器的目的。</p>
<p>HTTP重定向类似于“镜像站点负载均衡”，其最大的不同是：镜像站点是让用户选择的，而HTTP重定向的路由调度是由Web服务端的代码逻辑实现的。</p>
<h4 id="优点">优点</h4><ul>
<li>实现简单，由一小段代码即可实现完成简单的调度分发</li>
<li>调度灵活自由，因为调度算法是自己实现的</li>
</ul>
<h4 id="存在的问题">存在的问题</h4><ul>
<li>伸缩性不好，集群中增减主机往往需要修改代码（或服务器列表配置文件），这可能会导致重新部署（虽然这也可以通过代码来解决）</li>
<li>如果重定向后的页面被客户端收藏，此后的请求就一直由那台机器提供服务，这将导致之前制定的负载分发策略失效，也不能实现“故障转移”。</li>
<li>集群的最大吞吐量受到负载均衡器性能的制约</li>
<li>对搜索引擎不友好，搜索引擎对HTTP重定向经常判定为作弊</li>
<li>请求需要两个往返才可以完成，因此效率不高。</li>
</ul>
<h3 id="3-_基于DNS轮询的负载均衡">3. 基于DNS轮询的负载均衡</h3><p>DNS服务器可以针对某个域名添加多个A纪录，比如A1，A2，A3，当客户端每次访问DNS服务器让其解析域名对应的IP地址时，DNS服务器会依次从事先添加的A记录中返回，从而达到负载依次被分发到A1，A2，A3地址所对应的服务器进行处理，该策略最大的优点也是简单，但它同样也存在一些问题。</p>
<h4 id="存在的问题-1">存在的问题</h4><ul>
<li><p><strong>浪费公网IP地址</strong><br>每个A记录对应的IP地址都是要事先准备好的，而且必须是外网地址，我们知道，在互联网上，IPv4地址已经相当紧张</p>
</li>
<li><p><strong>并不一定能实现预期的均等</strong><br>因为HTTP代理（比如浏览器或各种代理服务器）会缓存DNS的解析结果，在DNS缓存没有失效之前，客户端都不会再请求DNS服务器。</p>
</li>
<li><p><strong>不能感知Web服务器的健康状况</strong><br>DNS服务器只是机械地轮流解析，它才不管某台机器负载已经很重，甚至某台机器已经挂掉了，它仍然会将负载分流到这些已经坏了的机器，导致无法提供服务的情况。</p>
</li>
<li><p><strong>难以实现故障转移</strong><br>如果发现之前添加到DNS服务器中的某台机器发生了故障，这个时候最理想的期望是立即从DNS服务器的A纪录中拿掉这台发生故障的主机记录，但是这往往很难实现，这是因为：</p>
</li>
</ul>
<ol>
<li><p>由于客户端DNS解析缓存的存在，在TTL没有过期之前，客户端仍然会一直请求故障机</p>
</li>
<li><p>鉴于上门所说的，DNS不能及时感知Web服务器的健康状况，一旦机器故障，我们能做的只是人工去修改DNS映射，但是这种更新往往又不能立即生效，因此会造成较长时间的不能提供服务。</p>
</li>
</ol>
<ul>
<li><strong>灵活性不够</strong><br>基于DNS的负载分发工作在DNS层面，而像HTTP重定向是基于HTTP应用层的，因此对于前者来说，如果需要提供更多的调度策略往往比较难，而对于后者，可以基于更多的场景来实现更丰富的调度逻辑，比如：基于地域，基于IP，基于不同的URL模式等。</li>
</ul>
<p>实际上，该方案可用于小型网站的负载分发，而在大型网站往往只是部分采用，大型网站往往采用“层级负载均衡方案”，即先配置使用DNS轮询，完成域名对多个IP的解析，添加的A记录对应于多个对外服务的负载均衡器，请求达到每个负载均衡器后，再由负载均衡器对请求进行再调度。</p>
<h3 id="4-_基于IP的负载均衡">4. 基于IP的负载均衡</h3><p>IP负载均技术是工作在四层（网络层）的使用最广的负载均衡技术，它是在操作系统的内核进程中对请求进行转发的，因此相比其他负载均衡技术（如反向代理负载均衡）它的效率更高。</p>
<p>该技术提供三种模式：</p>
<h4 id="VS/NAT（网络地址转换）">VS/NAT（网络地址转换）</h4><h5 id="处理流程">处理流程</h5><ul>
<li>负载均衡器收到来自客户端的请求报文</li>
<li>通过调度算法得到一台真实服务器</li>
<li>修改请求报文中的“目标IP地址”和“目标端口”为刚刚得到的真实机器的IP和端口</li>
<li>将该请求报文转发给真实服务器去处理</li>
<li>真实服务器处理完后，将响应报文发给负载均衡器</li>
<li>负载均衡器将响应报文中的“源IP地址”和“源端口”再次改为VIP（提供对外服务的虚拟IP）</li>
<li>将响应报文发回客户端</li>
</ul>
<h5 id="优缺点-1">优缺点</h5><ul>
<li>负载均衡器需要对请求报文修改一次，然后还要对响应报文再一次修改</li>
<li>响应报文必须再次经过负载均衡器，因此负载均衡器负担加重</li>
<li>响应报文往往比请求报文大很多，如果响应报文如果也经过负载均衡器，那么负载均衡器的网卡带宽将会是一个瓶颈</li>
</ul>
<h4 id="VS/DR（直接服务器路由）">VS/DR（直接服务器路由）</h4><p>VS/DR是使用最广的一种模式，它的处理流程比VS/NAT简单高效</p>
<h5 id="处理流程-1">处理流程</h5><ul>
<li>负载均衡器收到客户端请求</li>
<li>通过调度算法得到一台真实服务器</li>
<li>负载均衡器<strong>对请求不做任何修改</strong>，将其直接转发给真实服务器</li>
<li>真实服务器处理完成后<strong>不用将响应报文发回到负载均衡器</strong>，而是直接发回客户端</li>
</ul>
<h5 id="优点-1">优点</h5><ul>
<li>调度效率高，负载均衡器不用修改请求报文</li>
<li>响应报文不用发回负载均衡器，因此大大提高了负载均衡器的吞吐率</li>
<li>集群吞吐率只取决于负载军器的入口带宽以及集群的出口带宽</li>
</ul>
<h4 id="VS/TUN（IP隧道）">VS/TUN（IP隧道）</h4><p>该模式应用的不多，所以不做详细介绍，具体请参加<a href="http://www.linuxvirtualserver.org/zh/lvs3.html#4" target="_blank" rel="external">这里</a></p>
<blockquote>
<p>最常用的是VS/DR模式，它最高效而且配置简单，关于”IP负载均衡技术”的详细介绍，请参考<a href="http://www.linuxvirtualserver.org/zh/index.html" target="_blank" rel="external">官方文档</a></p>
</blockquote>
<h3 id="5-_基于反向代理的负载均衡">5. 基于反向代理的负载均衡</h3><p>反向代理服务器是挡在真实服务器前面的服务器，用以隐藏后端的真实服务器，缓存部分请求内容，当然了，也可以作为负载均衡器使用</p>
<p>它的核心工作是转发HTTP请求（区别于HTTP重定向是‘转移’而非’转发’）。反向代理服务器可以配置各种灵活的规则实现对请求的转移。</p>
<h4 id="优点-2">优点</h4><ul>
<li><p>有些反向代理服务器可以监控后端服务器组的多方面状态，这使得我们能够更加精细化的控制负载调度。</p>
<blockquote>
<p>比如Varnish，使用它作为负载均衡器，可以监控后端服务器的很多方面，比如:系统负载，响应时间，是否可用，TCP连接，流量等性能参数。</p>
</blockquote>
</li>
<li><p>它工作在应用层的，因此相比于IP负载均衡技术而言，它可以提供更加完善的基于HTTP内容的调度策略，比如：</p>
<ul>
<li>根据IP地址进行黑白名单过滤</li>
<li>可以实现地址重定向（如：/foo/bar指向到foo?id=bar）</li>
<li>根据HTTP头中的User-Agent对搜索引擎爬虫的访问进行控制</li>
</ul>
</li>
</ul>
<h4 id="存在的问题-2">存在的问题</h4><ul>
<li>和基于IP负载均衡技术相比，效率不高</li>
<li>所有HTTP请求都要经过反向代理服务器，因此它容易成为集群新的瓶颈，当成为瓶颈后，增加再多的分流节点也无济于事。</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="1-_基于镜像站点的负载均衡">1. 基于镜像站点的负载均衡</h3><p>最早的负载均衡技术可以追溯到古老的镜像站点技术，其本质是制作多个站点的拷贝（镜像），然后在网页上提供站点列表，供用户选择，从而达到分流负载的目的。该技术现在仍然被一些如下载站点使用。</p]]>
    </summary>
    
      <category term="dns" scheme="http://bafeimao.net/tags/dns/"/>
    
      <category term="ipvs" scheme="http://bafeimao.net/tags/ipvs/"/>
    
      <category term="load balance" scheme="http://bafeimao.net/tags/load-balance/"/>
    
      <category term="lvs" scheme="http://bafeimao.net/tags/lvs/"/>
    
      <category term="web" scheme="http://bafeimao.net/tags/web/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[如何为Git添加忽略]]></title>
    <link href="http://bafeimao.net/2011/10/18/howto-add-ignores-for-git/"/>
    <id>http://bafeimao.net/2011/10/18/howto-add-ignores-for-git/</id>
    <published>2011-10-18T05:33:11.000Z</published>
    <updated>2015-10-18T05:35:35.000Z</updated>
    <content type="html"><![CDATA[<p>添加.gitignore文件</p>
<figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># echo <span class="string">'.idea'</span> &gt;&gt; .gitignore</span></span><br><span class="line"><span class="preprocessor"># echo <span class="string">'.gradle'</span> &gt;&gt; .gitignore</span></span><br></pre></td></tr></table></figure>
<p>添加.gitignore文件到git的索引区(Index)</p>
<figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># git add .gitignore</span></span><br></pre></td></tr></table></figure>
<p>从index中删除之前添加的文件夹或文件</p>
<figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># git rm --cached -r .idea</span><br><span class="line"># git rm --cached -r .gradle</span><br><span class="line"></span><br><span class="line"><span class="label">NOTE: </span>该命令只会从Index中删除.idea和gradle目录，工作区不受影响</span><br></pre></td></tr></table></figure>
<p>提交更改<br><figure class="highlight ocaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># git commit -m <span class="symbol">'ignore</span> .idea <span class="keyword">and</span> .gradle folders'</span><br></pre></td></tr></table></figure></p>
<p>如果要提交到远程仓库</p>
<figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># git push</span></span><br></pre></td></tr></table></figure>
<p><strong>备注：</strong></p>
<p>[1] Intellij IDEA有很好用的gitignore插件，可以快速无误的帮我们添加各种需要忽略的内容到.gitignore文件中</p>
<p>[2] 还有一个<a href="https://www.gitignore.io/" target="_blank" rel="external">在线生成</a>.gitignore的工具，贼棒！</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>添加.gitignore文件</p>
<figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">]]>
    </summary>
    
      <category term="git" scheme="http://bafeimao.net/tags/git/"/>
    
      <category term="howto" scheme="http://bafeimao.net/tags/howto/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[如何将mave项目部署到本地仓库]]></title>
    <link href="http://bafeimao.net/2011/10/18/howto-deploy-project-to-local-repo-in-maven/"/>
    <id>http://bafeimao.net/2011/10/18/howto-deploy-project-to-local-repo-in-maven/</id>
    <published>2011-10-18T05:26:50.000Z</published>
    <updated>2015-10-18T05:35:53.000Z</updated>
    <content type="html"><![CDATA[<p>在pom.xml文件中添加以下配置节点</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">distributionManagement</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">repository</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">id</span>&gt;</span>nexus-releases<span class="tag">&lt;/<span class="title">id</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">name</span>&gt;</span>Local nexus releases repository<span class="tag">&lt;/<span class="title">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">url</span>&gt;</span></span><br><span class="line">            http://localhost/nexus/content/repositories/releases/ </span><br><span class="line">        <span class="tag">&lt;/<span class="title">url</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">repository</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="title">snapshotRepository</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">id</span>&gt;</span>nexus-snapshots<span class="tag">&lt;/<span class="title">id</span> &gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">name</span>&gt;</span>Local nexus snapshots repository<span class="tag">&lt;/<span class="title">name</span>&gt;</span>       </span><br><span class="line">        <span class="tag">&lt;<span class="title">url</span>&gt;</span></span><br><span class="line">            http://localhost/nexus/content/repositories/snapshots/</span><br><span class="line">        <span class="tag">&lt;/<span class="title">url</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">snapshotRepository</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">distributionManagement</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>说明：上面的配置文件中指定的是将打包文件部署到本地的一个仓库，对外部或本地仓库的访问一般都需要配置权限，所以还需要在settings.xml文件中配置访问权限</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">servers</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="title">server</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="title">id</span>&gt;</span>nexus-releases<span class="tag">&lt;/<span class="title">id</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="title">username</span>&gt;</span>admin<span class="tag">&lt;/<span class="title">username</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="title">password</span>&gt;</span>admin123<span class="tag">&lt;/<span class="title">password</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="title">server</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="title">server</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="title">id</span>&gt;</span>nexus-snapshots<span class="tag">&lt;/<span class="title">id</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="title">username</span>&gt;</span>admin<span class="tag">&lt;/<span class="title">username</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="title">password</span>&gt;</span>admin123<span class="tag">&lt;/<span class="title">password</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="title">server</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">servers</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><strong>注意：</strong> 上面的<code>&lt;server&gt;</code>/<code>&lt;id&gt;</code>节点中的名称和<code>&lt;repository&gt;</code>的<code>&lt;id&gt;</code>中的名称要保持一致</p>
<p>执行部署</p>
<figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># mvn deploy</span></span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<p>在pom.xml文件中添加以下配置节点</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line]]>
    </summary>
    
      <category term="howto" scheme="http://bafeimao.net/tags/howto/"/>
    
      <category term="maven" scheme="http://bafeimao.net/tags/maven/"/>
    
      <category term="nexus" scheme="http://bafeimao.net/tags/nexus/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[配置SSH无密码登陆]]></title>
    <link href="http://bafeimao.net/2011/09/25/ssh-login-without-password-configuration/"/>
    <id>http://bafeimao.net/2011/09/25/ssh-login-without-password-configuration/</id>
    <published>2011-09-25T15:19:08.000Z</published>
    <updated>2015-10-17T04:37:16.000Z</updated>
    <content type="html"><![CDATA[<p>SSH(Secure Shell)是建立在应用层和传输层基础上的安全协议，利用 SSH 协议可以有效防止远程管理过程中的信息泄露问题，他提供两种方式的验证：</p>
<ol>
<li>基于口令的安全验证</li>
<li>基于密钥的安全验证</li>
</ol>
<blockquote>
<p>其中基于密钥的验证比基于账号口令的验证有更高的安全性而且更方便</p>
</blockquote>
<p>下文讲解配置基于密钥的安全验证，让我们可以无密码登陆远程主机。</p>
<p>基本原理：</p>
<blockquote>
<p>假设我们需要从A机器上登陆远程主机B，我只需要在主机A上生成一对公钥和私钥，然后将公钥文件拷贝到主机B的authorized_keys中，这样A就可以无密码连接B了</p>
</blockquote>
<p>以下为操作步骤：</p>
<p>###创建public/private Keys</p>
<p>使用<code>$ ssh-keygen</code>命令可以创建公钥和私钥（在每个提示处一路回车）</p>
<figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">Generating public/private rsa key pair.</span><br><span class="line">Enter file in which to save the key (/root/.ssh/id_rsa): </span><br><span class="line">Created directory '/root/.ssh'.</span><br><span class="line">Enter passphrase (empty for no passphrase): </span><br><span class="line">Enter same passphrase again: </span><br><span class="line">Your identification has been saved in /root/.ssh/id_rsa.</span><br><span class="line">Your public key has been saved in /root/.ssh/id_rsa.pub.</span><br><span class="line">The key fingerprint is:</span><br><span class="line">5a:7c:2c:bf:6c:4a:a7:40:bb:eb:e8:4f:ac:91:9d:8c root<span class="comment">@vm1</span></span><br><span class="line">The key's randomart image is:</span><br><span class="line">+--[ RSA 2048]----+</span><br><span class="line">|<span class="string">                 </span>|</span><br><span class="line">|<span class="string">                 </span>|</span><br><span class="line">|<span class="string">                 </span>|</span><br><span class="line">|<span class="string">       . .       </span>|</span><br><span class="line">|<span class="string">      . S o      </span>|</span><br><span class="line">|<span class="string">     B = +       </span>|</span><br><span class="line">|<span class="string">    E X . o      </span>|</span><br><span class="line">|<span class="string">     = + +..     </span>|</span><br><span class="line">|<span class="string">   .+o=.ooo      </span>|</span><br><span class="line">+-----------------+</span><br></pre></td></tr></table></figure>
<p>生成成功，在<code>~/.ssh</code>目录下会生成·<code>id_rsa</code>和<code>id_rsa.pub</code>两个文件。</p>
<p>###拷贝公钥到远程主机</p>
<p><code>ssh-copy-id</code>命令用于拷贝公钥到远程主机的<code>.ssh/authorized_keys</code>文件中，过程中会提示输入一次密码。</p>
<figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-<span class="keyword">copy</span>-<span class="property">id</span> hadoop@vm2</span><br><span class="line">The authenticity <span class="keyword">of</span> host 'vm2 (<span class="number">172.16</span><span class="number">.115</span><span class="number">.102</span>)' can't be established.</span><br><span class="line">RSA key fingerprint <span class="keyword">is</span> <span class="number">9</span>c:<span class="number">43</span>:<span class="number">77</span>:<span class="number">79</span>:<span class="number">08</span>:<span class="number">1</span>e:<span class="number">23</span>:ec:<span class="number">3</span>b:<span class="number">3</span>b:ad:d0:a1:<span class="number">63</span>:<span class="number">0</span>c:e0.</span><br><span class="line">Are you sure you want <span class="keyword">to</span> <span class="keyword">continue</span> connecting (yes/no)? yes</span><br><span class="line">Warning: Permanently added 'vm2,<span class="number">172.16</span><span class="number">.115</span><span class="number">.102</span>' (RSA) <span class="keyword">to</span> <span class="keyword">the</span> <span class="type">list</span> <span class="keyword">of</span> known hosts.</span><br><span class="line">hadoop@vm2's password: </span><br><span class="line">Now <span class="keyword">try</span> logging <span class="keyword">into</span> <span class="keyword">the</span> machine, <span class="keyword">with</span> <span class="string">"ssh 'hadoop@vm2'"</span>, <span class="keyword">and</span> check <span class="keyword">in</span>:</span><br><span class="line"></span><br><span class="line">  .ssh/authorized_keys</span><br><span class="line"></span><br><span class="line"><span class="keyword">to</span> make sure we haven't added extra keys <span class="keyword">that</span> you weren't expecting.</span><br></pre></td></tr></table></figure>
<h3 id="验证无密码登陆">验证无密码登陆</h3><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>ssh hadoop<span class="variable">@vm2</span></span><br><span class="line">[此处没有提示输入密码]</span><br></pre></td></tr></table></figure>
<p>##@see also:<br><a href="http://linuxconfig.org/passwordless-ssh" target="_blank" rel="external">http://linuxconfig.org/passwordless-ssh</a><a href="https://en.wikipedia.org/wiki/Ssh-agent" target="_blank" rel="external">enter link description here</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>SSH(Secure Shell)是建立在应用层和传输层基础上的安全协议，利用 SSH 协议可以有效防止远程管理过程中的信息泄露问题，他提供两种方式的验证：</p>
<ol>
<li>基于口令的安全验证</li>
<li>基于密钥的安全验证</li>
</ol>
<bloc]]>
    </summary>
    
      <category term="linux" scheme="http://bafeimao.net/tags/linux/"/>
    
      <category term="ssh" scheme="http://bafeimao.net/tags/ssh/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[如何快速切换多个JDK版本]]></title>
    <link href="http://bafeimao.net/2011/04/18/howto-switch-jdk-version-quickly/"/>
    <id>http://bafeimao.net/2011/04/18/howto-switch-jdk-version-quickly/</id>
    <published>2011-04-18T05:16:01.000Z</published>
    <updated>2015-10-18T05:37:43.000Z</updated>
    <content type="html"><![CDATA[<p>很多时候，我们的开发机上往往安装着多个JDK版本（有的用于开发，有的用于尝鲜），并在需要的时候在多个不同版本之间切换，如果每次用到时都去手动修改JAVA_HOME环境变量确实麻烦，其实这些操作都可以写到开机脚本中，以后切换JDK版本只需执行一条命令即可（以下以mac系统为例，其他linux系统同理）</p>
<blockquote>
<p>如果没有安装多个版本，实践以下步骤前，请先到Oracle官网下载相关版本并安装</p>
<p>[1] <a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html" target="_blank" rel="external">最新版下载页</a></p>
<p>[2] <a href="http://www.oracle.com/technetwork/java/javase/archive-139210.html" target="_blank" rel="external">归档的旧版本下载页</a></p>
</blockquote>
<p>打开配置文件<br><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># vim ~/.bash_profile</span></span><br></pre></td></tr></table></figure></p>
<p>添加如下配置</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#配置各种版本的JAVA_HOME</span></span><br><span class="line"><span class="built_in">export</span> JAVA_6_HOME=/Library/Java/Home</span><br><span class="line"><span class="built_in">export</span> JAVA_7_HOME=/Library/Java/JavaVirtualMachines/jdk1.<span class="number">7.0</span>_80.jdk/Contents/Home</span><br><span class="line"><span class="built_in">export</span> JAVA_8_HOME=/Library/Java/JavaVirtualMachines/jdk1.<span class="number">8.0</span>_51.jdk/Contents/Home</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置默认JAVA_HOME为JDK7</span></span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=<span class="variable">$JAVA_7_HOME</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#设置别名命令，用于快速切换JAVA版本</span></span><br><span class="line"><span class="built_in">alias</span> jdk6=<span class="string">'export JAVA_HOME=$JAVA_6_HOME'</span></span><br><span class="line"><span class="built_in">alias</span> jdk7=<span class="string">'export JAVA_HOME=$JAVA_7_HOME'</span></span><br><span class="line"><span class="built_in">alias</span> jdk8=<span class="string">'export JAVA_HOME=$JAVA_8_HOME'</span></span><br></pre></td></tr></table></figure>
<p>让配置生效<br><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># source ~/.bash_profile</span></span><br></pre></td></tr></table></figure></p>
<p>验证是否工作</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">检查当前使用的JDK版本</span><br><span class="line"><span class="preprocessor"># java -version</span></span><br><span class="line">java version <span class="string">"1.7.0_80-ea"</span></span><br><span class="line"></span><br><span class="line">切换其他版本</span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># jdk6 &amp;&amp; java -version</span></span><br><span class="line">Java(TM) <span class="function">SE Runtime <span class="title">Environment</span> <span class="params">(build <span class="number">1.6</span><span class="number">.0</span>_65-b14-<span class="number">466.1</span>-<span class="number">11</span>M4716)</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># jdk7 &amp;&amp; java -version</span></span><br><span class="line"><span class="title">Java</span><span class="params">(TM)</span> SE Runtime <span class="title">Environment</span> <span class="params">(build <span class="number">1.7</span><span class="number">.0</span>_80-ea-b05)</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># jdk8 &amp;&amp; java -version</span></span><br><span class="line"><span class="title">Java</span><span class="params">(TM)</span> SE Runtime <span class="title">Environment</span> <span class="params">(build <span class="number">1.8</span><span class="number">.0</span>_51-b16)</span></span></span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<p>很多时候，我们的开发机上往往安装着多个JDK版本（有的用于开发，有的用于尝鲜），并在需要的时候在多个不同版本之间切换，如果每次用到时都去手动修改JAVA_HOME环境变量确实麻烦，其实这些操作都可以写到开机脚本中，以后切换JDK版本只需执行一条命令即可（以下以mac系统为例]]>
    </summary>
    
      <category term="java" scheme="http://bafeimao.net/tags/java/"/>
    
      <category term="jdk" scheme="http://bafeimao.net/tags/jdk/"/>
    
      <category term="mac" scheme="http://bafeimao.net/tags/mac/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Git常用远程操作]]></title>
    <link href="http://bafeimao.net/2011/01/03/how-to-use-git-remote-commands/"/>
    <id>http://bafeimao.net/2011/01/03/how-to-use-git-remote-commands/</id>
    <published>2011-01-03T08:29:29.000Z</published>
    <updated>2015-10-17T02:00:44.000Z</updated>
    <content type="html"><![CDATA[<h4 id="Git常用远程操作">Git常用远程操作</h4><p>在对Git远程操作命令理解之前，首先看下图，该图可以直观地帮助我们理解各操作命令执行后所影响的区域。</p>
<blockquote>
<p>本文假设你对git的常规概念如：工作区（workspace），索引区（index）,本地仓库（local repository）和远程仓库（remote repository）都已经有了初步的了解。</p>
</blockquote>
<p><img src="http://image.beekka.com/blog/2014/bg2014061202.jpg" alt="Git"></p>
<h3 id="git_clone">git clone</h3><p>该命令用于克隆一个远程仓库到本地文件。</p>
<blockquote>
<p>$ git clone <a href="https://github.com/bafeimao/pages1" target="_blank" rel="external">https://github.com/bafeimao/pages1</a><br>该命令会在本地自动创建文件夹<code>pages1</code></p>
</blockquote>
<p>也可以指定要克隆到的本地文件夹名</p>
<blockquote>
<p>$ git clone <a href="https://github.com/bafeimao/pages1" target="_blank" rel="external">https://github.com/bafeimao/pages1</a> blog</p>
</blockquote>
<p>可以提供多种协议访问方式，例如，github上提供如下三种常见的协议：</p>
<blockquote>
<p>$ git clone <a href="https://github.com/bafeimao/pages1" target="_blank" rel="external">https://github.com/bafeimao/pages1</a><br>$ git clone git@github.com:bafeimao/pages1.git</p>
</blockquote>
<h3 id="git_remote">git remote</h3><p>要想对远程仓库进行管理，首先要使用<code>remote add</code>命令添加一个远程仓库对应的名称（其他命令如：<code>git pull</code>,<code>git push</code>等操作都将依赖于该远程仓库名 ）</p>
<p>添加一个远程仓库(需要指定一个名称和仓库的具体地址)</p>
<blockquote>
<p>$ git remote add origin git@github.com:bafeimao/pages1.git</p>
</blockquote>
<p> 查看当前已经添加过的所有远程仓库列表</p>
<blockquote>
<p>$ git remote<br>origin</p>
</blockquote>
<p>使用-v选项可以看到更具体的名称和远程仓库URL</p>
<blockquote>
<p>$ git remote -v<br>origin    git@github.com:bafeimao/coconut-projects.git (fetch)<br>origin    git@github.com:bafeimao/coconut-projects.git (push)</p>
</blockquote>
<h3 id="git_fetch">git fetch</h3><p>成功添加远程仓库后，一旦远程仓库有更新，我就可以使用<code>fetch</code>命令将远程更改取回到本地仓库， 注意：这里是将更改取到本地仓库（local repository）而非本地工作区(workspace)，详见参考图）</p>
<blockquote>
<p>$ git fetch origin</p>
</blockquote>
<p>默认取回所有分支的更改，可以指定只获取具体分支的更改</p>
<blockquote>
<p>$ git fetch origin dev</p>
</blockquote>
<h3 id="git_pull">git pull</h3><p>根据上图，也可以直接将远程的某个分支的更改取回到工作区（workspace）中的指定分支上，这就要用到<code>git pull</code>命令了，该命令的基本用法如下:</p>
<p><code>$ git pull [&lt;remote-repo&gt; [&lt;remote-branch&gt;[:&lt;local-branch&gt;]]]</code></p>
<p>将远程仓库master分支上的更改合并到本地工作区的dev分支</p>
<blockquote>
<p>$ git pull origin master:dev</p>
<p>冒号后面的本地分支名可以省略，省略时表示合并到当前工作分支:<br>$ git pull origin master</p>
</blockquote>
<h3 id="git_push">git push</h3><p>如果需要将本地仓库的更改提交到远程，就需要使用<code>git push</code>命令，该命令的基本用法如下：</p>
<p><code>$ git push [&lt;remote-repo&gt; [&lt;local-branch&gt;[:&lt;remote-branch&gt;]]]</code></p>
<p>将本地dev分支推送到远程dev分支</p>
<blockquote>
<p>$ git push origin dev:dev</p>
</blockquote>
<p>另外可以设定当前工作分支（假设为dev）的upstream分支（即对应的远程分支），这样设定以后，在执行push时可以省略<code>本地分支名：远程分支名</code>，甚至远程仓库名称origin也可以省略</p>
<blockquote>
<p>$ git push –set-upstream origin dev</p>
</blockquote>
<p>此时可以省略分支名</p>
<blockquote>
<p>$ git push origin</p>
</blockquote>
<p>甚至连origin都可以省略</p>
<blockquote>
<p>$ git push</p>
</blockquote>
<p><strong>注意</strong>：如果指定的远程分支不存在，则会在远程自动创建 </p>
<p>如果没有指定本地分支名则表示删除远程分支，下面两种方式均执行删除远程分支dev<br><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>git push origin <span class="symbol">:dev</span> </span><br><span class="line"><span class="variable">$ </span>git push origin --delete dev</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<h4 id="Git常用远程操作">Git常用远程操作</h4><p>在对Git远程操作命令理解之前，首先看下图，该图可以直观地帮助我们理解各操作命令执行后所影响的区域。</p>
<blockquote>
<p>本文假设你对git的常规概念如：工作区（workspace），索引]]>
    </summary>
    
      <category term="git" scheme="http://bafeimao.net/tags/git/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[使用Hexo在github上建立博客]]></title>
    <link href="http://bafeimao.net/2010/08/25/how-to-build-blog-on-github-by-hexo/"/>
    <id>http://bafeimao.net/2010/08/25/how-to-build-blog-on-github-by-hexo/</id>
    <published>2010-08-25T06:07:42.000Z</published>
    <updated>2015-10-18T05:38:58.000Z</updated>
    <content type="html"><![CDATA[<h3 id="初始化">初始化</h3><p>运行如下命令以完成初始化操作</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init ~<span class="regexp">/blog &amp;&amp; cd ~/</span>blog &amp;&amp; cnpm install</span><br></pre></td></tr></table></figure>
<p>成功执行后查看文件夹下的内容如下：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">total <span class="number">24</span></span><br><span class="line">drwxr-xr-x   <span class="number">9</span> ktgu  staff   <span class="number">306</span>  <span class="number">7</span> <span class="number">28</span> <span class="number">13</span>:<span class="number">23</span> .</span><br><span class="line">drwxr-xr-x+ <span class="number">66</span> ktgu  staff  <span class="number">2244</span>  <span class="number">7</span> <span class="number">28</span> <span class="number">13</span>:<span class="number">23</span> ..</span><br><span class="line">-rw-r--r--   <span class="number">1</span> ktgu  staff    <span class="number">65</span>  <span class="number">7</span> <span class="number">28</span> <span class="number">13</span>:<span class="number">23</span> .gitignore</span><br><span class="line">-rw-r--r--   <span class="number">1</span> ktgu  staff  <span class="number">1477</span>  <span class="number">7</span> <span class="number">28</span> <span class="number">13</span>:<span class="number">23</span> _config.yml</span><br><span class="line">drwxr-xr-x  <span class="number">12</span> ktgu  staff   <span class="number">408</span>  <span class="number">7</span> <span class="number">28</span> <span class="number">13</span>:<span class="number">24</span> node_modules</span><br><span class="line">-rw-r--r--   <span class="number">1</span> ktgu  staff   <span class="number">442</span>  <span class="number">7</span> <span class="number">28</span> <span class="number">13</span>:<span class="number">23</span> package.json</span><br><span class="line">drwxr-xr-x   <span class="number">5</span> ktgu  staff   <span class="number">170</span>  <span class="number">7</span> <span class="number">28</span> <span class="number">13</span>:<span class="number">23</span> scaffolds</span><br><span class="line">drwxr-xr-x   <span class="number">3</span> ktgu  staff   <span class="number">102</span>  <span class="number">7</span> <span class="number">28</span> <span class="number">13</span>:<span class="number">23</span> source</span><br><span class="line">drwxr-xr-x   <span class="number">3</span> ktgu  staff   <span class="number">102</span>  <span class="number">7</span> <span class="number">28</span> <span class="number">13</span>:<span class="number">23</span> themes</span><br></pre></td></tr></table></figure>
<h3 id="生成文件">生成文件</h3><p>Hexo生成文件速度非常快，使用如下命令即可生成文件</p>
<figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>hexo generate</span><br><span class="line">或者</span><br><span class="line"><span class="variable">$ </span>hexo g</span><br></pre></td></tr></table></figure>
<h3 id="部署到github">部署到github</h3><p>Hexo提供了便捷的一键部署功能，并且支持部署到多个目的地，如：Git，HeroKu，Rsync，OpenShift，FTPSync等。下面以部署到github为例：</p>
<p>首先要安装hexo-deployer-git插件</p>
<blockquote>
<p>$ cnpm install hexo-deployer-git –save</p>
</blockquote>
<p>然后打开_config.yaml文件，修改如下配置：</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: git@github<span class="class">.com</span>:bafeimao/pages1<span class="class">.git</span></span><br><span class="line">  branch: gh-pages</span><br></pre></td></tr></table></figure>
<p>然后执行生成并部署</p>
<figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ hexo <span class="keyword">g</span> &amp;&amp; hexo <span class="literal">d</span></span><br><span class="line">或者</span><br><span class="line">$ hexo <span class="keyword">g</span> --deploy</span><br><span class="line">或者</span><br><span class="line">$ hexo <span class="keyword">d</span> --<span class="keyword">generate</span></span><br></pre></td></tr></table></figure>
<p>若成功部署，会看到如下信息：</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">To git<span class="annotation">@github</span>.<span class="string">com:</span>bafeimao/pages.git</span><br><span class="line">* [<span class="keyword">new</span> branch]      master -&gt; gh-pages</span><br><span class="line">Branch master set up to track remote branch gh-pages from git<span class="annotation">@github</span>.<span class="string">com:</span>bafeimao/pages.git.</span><br><span class="line">INFO  Deploy <span class="string">done:</span> git</span><br></pre></td></tr></table></figure>
<p><strong>注意</strong>：如部署失败，默认不显示任何错误信息，你可以加上–debug参数查看详情</p>
<blockquote>
<p>$ hexo d –debug</p>
</blockquote>
<p>最后，打开github博客验证是否成功部署：</p>
<p><code>http://{github-username}.github.io/{project-name}</code></p>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="初始化">初始化</h3><p>运行如下命令以完成初始化操作</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</spa]]>
    </summary>
    
      <category term="github" scheme="http://bafeimao.net/tags/github/"/>
    
      <category term="hexo" scheme="http://bafeimao.net/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Maven常用操作]]></title>
    <link href="http://bafeimao.net/2010/06/18/maven-common-operations/"/>
    <id>http://bafeimao.net/2010/06/18/maven-common-operations/</id>
    <published>2010-06-18T05:09:39.000Z</published>
    <updated>2015-10-18T05:12:10.000Z</updated>
    <content type="html"><![CDATA[<p>清理项目（删除target文件夹）</p>
<figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="keyword">mvn </span>clean</span><br></pre></td></tr></table></figure>
<p> 清理后测试（默认被放到target/test-classes文件夹下面）</p>
<figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="keyword">mvn </span>clean test</span><br></pre></td></tr></table></figure>
<p>编译主代码（默认被放到target/classes文件夹下）</p>
<figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="keyword">mvn </span>clean compile</span><br></pre></td></tr></table></figure>
<p>打包代码，打包成功后，可以看到target文件下生成了的.jar文件</p>
<figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mvn clean <span class="package"><span class="keyword">package</span></span></span><br></pre></td></tr></table></figure>
<p>如果需要打包<strong>可执行的jar包</strong>，则需要利用shade插件，我们需要在插件中配置如下信息</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="title">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">artifactId</span>&gt;</span>maven-shade-plugin<span class="tag">&lt;/<span class="title">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">version</span>&gt;</span>1.2.1<span class="tag">&lt;/<span class="title">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">executions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">execution</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">phase</span>&gt;</span>package<span class="tag">&lt;/<span class="title">phase</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">goals</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">goal</span>&gt;</span>shade<span class="tag">&lt;/<span class="title">goal</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="title">goals</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">configuration</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">transformers</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="title">transformer</span></span><br><span class="line">                            <span class="attribute">implementation</span>=<span class="value">"org.apache.maven.plugins.shade.resource.ManifestResourceTransformer"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="title">mainClass</span>&gt;</span>net.bafeimao.potato.App<span class="tag">&lt;/<span class="title">mainClass</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="title">transformer</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="title">transformers</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="title">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">execution</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">executions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>然后再次执行&gt;mvn clean package，我们可以看到target文件夹下有两个文件<br>original-potato-core-1.0-SNAPSHOT.jar<br>potato-core-1.0-SNAPSHOT.jar （可执行的）</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ java -jar potato-core-<span class="number">1.0</span>-SNAPSHOT<span class="class">.jar</span></span><br><span class="line">Hello world</span><br></pre></td></tr></table></figure>
<p>打包并将打包好的jar包发布到本地仓库</p>
<figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="keyword">mvn </span>clean install</span><br></pre></td></tr></table></figure>
<p>查看当前项目的依赖列表（使用eclipse的pom设计器可以看到图形化的显示结果，会更直观）</p>
<figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mvn dependency:<span class="type">list</span></span><br></pre></td></tr></table></figure>
<p>查看当前项目的依赖树</p>
<figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="keyword">mvn </span>dependency:tree</span><br></pre></td></tr></table></figure>
<p>项目依赖分析</p>
<figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="keyword">mvn </span>dependency:analyze</span><br></pre></td></tr></table></figure>
<p>将jar文件部署到仓库</p>
<figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="keyword">mvn </span>clean deploy</span><br></pre></td></tr></table></figure>
<p><strong>注意：如果要将部署项目到目的仓库需要在pom文件中配置</strong></p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">distributionManagement</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="title">repository</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="title">id</span>&gt;</span> nexus-releases<span class="tag">&lt;/<span class="title">id</span> &gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="title">name</span>&gt;</span> Local nexus releases repository<span class="tag">&lt;/<span class="title">name</span> &gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="title">url</span>&gt;</span> http://localhost/nexus/content/repositories/releases/ <span class="tag">&lt;/<span class="title">url</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;/<span class="title">repository</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="title">snapshotRepository</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="title">id</span>&gt;</span> nexus-snapshots<span class="tag">&lt;/<span class="title">id</span> &gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="title">name</span>&gt;</span> Local nexus snapshots repository<span class="tag">&lt;/<span class="title">name</span> &gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="title">url</span>&gt;</span> http://localhost/nexus/content/repositories/snapshots/ <span class="tag">&lt;/<span class="title">url</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;/<span class="title">snapshotRepository</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="title">distributionManagement</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>对外部或本地仓库的访问一般都需要配置权限，所以还需要在settings.xml文件中配置访问权限</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">servers</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="title">server</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="title">id</span>&gt;</span>nexus-releases<span class="tag">&lt;/<span class="title">id</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="title">username</span>&gt;</span>admin<span class="tag">&lt;/<span class="title">username</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="title">password</span>&gt;</span>admin123<span class="tag">&lt;/<span class="title">password</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="title">server</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="title">server</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="title">id</span>&gt;</span>nexus-snapshots<span class="tag">&lt;/<span class="title">id</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="title">username</span>&gt;</span>admin<span class="tag">&lt;/<span class="title">username</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="title">password</span>&gt;</span>admin123<span class="tag">&lt;/<span class="title">password</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="title">server</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="title">servers</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><strong>NOTE: </strong>上面的<code>&lt;server&gt;&lt;id&gt;</code>节点中的名称需要和<code>&lt;repository&gt;&lt;id&gt;</code>中定义的名称保持一致就可以了</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>清理项目（删除target文件夹）</p>
<figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td c]]>
    </summary>
    
      <category term="maven" scheme="http://bafeimao.net/tags/maven/"/>
    
      <category term="nexus" scheme="http://bafeimao.net/tags/nexus/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Tomcat发生java.lang.OutOfMemoryError: PermGen space的解决方案]]></title>
    <link href="http://bafeimao.net/2010/05/25/tomcat-oom-permgen-solution/"/>
    <id>http://bafeimao.net/2010/05/25/tomcat-oom-permgen-solution/</id>
    <published>2010-05-25T14:59:35.000Z</published>
    <updated>2015-10-18T06:10:15.000Z</updated>
    <content type="html"><![CDATA[<p>产生该问题的主要原因是JVM永久带空间不足导致的，可以在环境变量CATALINA_OPTS中提高MaxPermSize参数值</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> CATALINA_OPTS = -XX:PermSize=<span class="number">128</span>m -XX:MaxPermSize=<span class="number">512</span>m</span><br></pre></td></tr></table></figure>
<p>如果是堆栈溢出,则需要提高xms的值</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> CATALINA_OPTS = -Xms128m -Xmx1024m -XX:PermSize=<span class="number">128</span>m -XX:MaxPermSize=<span class="number">512</span>m</span><br></pre></td></tr></table></figure>
<h3 id="参数解释:">参数解释:</h3><blockquote>
<p>-xms128：表示JVM初始堆栈大小<br>-xmx1024：表示JVM堆栈大小最大可以达到1M内存<br>-XX:PermSize=128m：表示初始永久带内存大小<br>-XX:MaxPermSize=512m：表示永久带最大内存大小</p>
</blockquote>
<h3 id="为什么设置CATALINA_OPTS就会生效？">为什么设置CATALINA_OPTS就会生效？</h3><p>因为在tomcat启动时会使用环境变量：JAVA_OPTS，CATALINA_OPTS, DEBUG_OPTS指定的值，查看%CATALINA_HOME%/bin/catalina.sh文件可以看到如下的代码段：</p>
<figure class="highlight mojolicious"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"></span><span class="perl"><span class="variable">%_EXECJAVA</span>% <span class="variable">%JAVA_OPTS</span>% <span class="variable">%CATALINA_OPTS</span>% <span class="variable">%DEBUG_OPTS</span>% -Djava.endorsed.dirs=<span class="string">"<span class="variable">%JAVA_ENDORSED_DIRS</span><span class="variable">%"</span> -classpath "</span><span class="variable">%CLASSPATH</span><span class="variable">%"</span> -Dcatalina.base=<span class="string">"<span class="variable">%CATALINA_BASE</span><span class="variable">%"</span> -Dcatalina.home="</span><span class="variable">%CATALINA_HOME</span><span class="variable">%"</span> -Djava.io.tmpdir=<span class="string">"<span class="variable">%CATALINA_TMPDIR</span><span class="variable">%"</span> <span class="variable">%MAINCLASS</span>% <span class="variable">%CMD_LINE_ARGS</span>% <span class="variable">%ACTION</span>%</span></span><span class="xml"></span></span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p>产生该问题的主要原因是JVM永久带空间不足导致的，可以在环境变量CATALINA_OPTS中提高MaxPermSize参数值</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span]]>
    </summary>
    
      <category term="howto" scheme="http://bafeimao.net/tags/howto/"/>
    
      <category term="tomcat" scheme="http://bafeimao.net/tags/tomcat/"/>
    
      <category term="troubleshooting" scheme="http://bafeimao.net/tags/troubleshooting/"/>
    
      <category term="aaa" scheme="http://bafeimao.net/categories/aaa/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[在linux上搭建svn服务器]]></title>
    <link href="http://bafeimao.net/2010/02/26/setup-svn-server-on-linux/"/>
    <id>http://bafeimao.net/2010/02/26/setup-svn-server-on-linux/</id>
    <published>2010-02-26T00:40:53.000Z</published>
    <updated>2015-10-17T04:37:16.000Z</updated>
    <content type="html"><![CDATA[<h3 id="创建svn仓库根目录">创建svn仓库根目录</h3><p>在创建代码仓库之前，我们需要创建一个svn仓库根目录，以后所有的代码仓库都是在这个根目录下创建</p>
<figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>mkdir ~<span class="regexp">/.svn</span></span><br></pre></td></tr></table></figure>
<h3 id="创建仓库">创建仓库</h3><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>svnadmin create ~<span class="regexp">/.svn/coconut</span></span><br></pre></td></tr></table></figure>
<p>成功创建后，会在coconut目录下生成一些文件：</p>
<figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>cd ~<span class="regexp">/.svn/coconut</span></span><br></pre></td></tr></table></figure>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ ls -l</span><br><span class="line">total <span class="number">16</span></span><br><span class="line">-rw-r--r--   <span class="number">1</span> ktgu  staff  <span class="number">229</span>  <span class="number">7</span> <span class="number">31</span> <span class="number">17</span>:<span class="number">28</span> README.txt</span><br><span class="line">drwxr-xr-x   <span class="number">5</span> ktgu  staff  <span class="number">170</span>  <span class="number">7</span> <span class="number">31</span> <span class="number">17</span>:<span class="number">28</span> conf</span><br><span class="line">drwxr-sr-x  <span class="number">15</span> ktgu  staff  <span class="number">510</span>  <span class="number">7</span> <span class="number">31</span> <span class="number">17</span>:<span class="number">28</span> db</span><br><span class="line">-r--r--r--   <span class="number">1</span> ktgu  staff    <span class="number">2</span>  <span class="number">7</span> <span class="number">31</span> <span class="number">17</span>:<span class="number">28</span> format</span><br><span class="line">drwxr-xr-x  <span class="number">11</span> ktgu  staff  <span class="number">374</span>  <span class="number">7</span> <span class="number">31</span> <span class="number">17</span>:<span class="number">28</span> hooks</span><br><span class="line">drwxr-xr-x   <span class="number">4</span> ktgu  staff  <span class="number">136</span>  <span class="number">7</span> <span class="number">31</span> <span class="number">17</span>:<span class="number">28</span> locks</span><br></pre></td></tr></table></figure>
<h3 id="设置访问策略">设置访问策略</h3><p>进入conf目录，编辑svnserve.conf文件（移除行首<code>#</code>并顶格）<br><figure class="highlight fix"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">password-db </span>=<span class="string"> passwd</span></span><br></pre></td></tr></table></figure></p>
<p>你也许需要配置匿名用户的访问权限（移除行首<code>#</code>并顶格）</p>
<figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">anon-access = <span class="command">read</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>如果你需要任何人都可以提交更改，则将read改为<code>write</code>，如果不希望匿名用户可以访问，则将read改为<code>none</code>。建议将改行改为<code>none</code></p>
</blockquote>
<p>另外，移除下面两行前面的<code>#</code>并顶格，以便设置用户以及访问权限等</p>
<figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="setting">password-db = <span class="value">passwd</span></span></span><br><span class="line"><span class="setting">authz-db = <span class="value">authz</span></span></span><br></pre></td></tr></table></figure>
<p>现在，打开passwd文件，配置用户</p>
<figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"> ...</span><br><span class="line">[users]</span><br><span class="line"><span class="constant">dev1</span> = aaa</span><br><span class="line"><span class="constant">dev2</span> = aaa</span><br></pre></td></tr></table></figure>
<p>上面的配置表示：添加了两个用户dev1，dev2，密码都是aaa。</p>
<p>配置authz，在[groups]下定义用户组，多个用户之间用逗号隔开</p>
<figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">[groups]</span></span><br><span class="line"><span class="setting">dev = <span class="value">dev1,dev2</span></span></span><br></pre></td></tr></table></figure>
<p>然后可以对版本库设置不同的访问权限</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr_selector">[/]</span></span><br><span class="line"><span class="at_rule">@<span class="keyword">dev=rm</span></span></span><br></pre></td></tr></table></figure>
<p>以上表示：让<code>dev</code>用户组对版本库的所有路径都拥有读写（<code>rw</code>）权限</p>
<h3 id="启动svn服务器">启动svn服务器</h3><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>svnserve -d -r ~<span class="regexp">/.svn/</span></span><br></pre></td></tr></table></figure>
<p>没有提示表示成功（Linux中没有提示就是最好的提示）</p>
<h3 id="停止svn服务器">停止svn服务器</h3><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>killall svnserve</span><br></pre></td></tr></table></figure>
<h3 id="测试正常运行">测试正常运行</h3><p>如果以下命令可以正常运行，说明配置成功</p>
<figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>svn checkout <span class="symbol">svn:</span>/<span class="regexp">/127.0.0.1/coconut</span><span class="regexp">/ ~/coconut</span></span><br></pre></td></tr></table></figure>
<p>以上命令首次运行会提示输入用户名和密码（使用在passwd中配置的用户名和密码即可）</p>
<p>或者可以在运行<code>svn checkout</code>命令时指定用户名和密码</p>
<figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$svn</span> checkout svn://<span class="number">127.0</span>.<span class="number">0</span>.<span class="number">1</span>/coconut --username=dev1 --password=aaa ~/coconut</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="创建svn仓库根目录">创建svn仓库根目录</h3><p>在创建代码仓库之前，我们需要创建一个svn仓库根目录，以后所有的代码仓库都是在这个根目录下创建</p>
<figure class="highlight crystal"><table><tr><td c]]>
    </summary>
    
      <category term="linux" scheme="http://bafeimao.net/tags/linux/"/>
    
      <category term="svn" scheme="http://bafeimao.net/tags/svn/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[XPath详解]]></title>
    <link href="http://bafeimao.net/2009/04/16/xpath-in-detail/"/>
    <id>http://bafeimao.net/2009/04/16/xpath-in-detail/</id>
    <published>2009-04-16T09:27:49.000Z</published>
    <updated>2015-10-31T09:29:42.000Z</updated>
    <content type="html"><![CDATA[<p>经常在工作中会使用到XPath的相关知识，但每次总会在一些关键的地方不记得或不太清楚，所以免不了每次总要查一些零碎的知识，感觉即很烦又浪费时间，所以对XPath归纳及总结一下。</p>
<p>在这篇文章中你将能学习到：</p>
<ul>
<li>XPath简介</li>
<li>XPath 路径表达式</li>
<li>XPath在DOM，XSLT及XQuery中的应用</li>
</ul>
<h2 id="XPath简介">XPath简介</h2><blockquote>
<p>XPath是W3C的一个标准。它最主要的目的是为了在XML1.0或XML1.1文档节点树中定位节点所设计。目前有XPath1.0和XPath2.0两个版本。其中Xpath1.0是1999年成为W3C标准，而XPath2.0标准的确立是在2007年。W3C关于XPath的英文详细文档请见：<a href="http://www.w3.org/TR/xpath20/" target="_blank" rel="external">http://www.w3.org/TR/xpath20/</a> 。</p>
</blockquote>
<p>XPath是一种表达式语言，它的返回值可能是节点，节点集合，原子值，以及节点和原子值的混合等。XPath2.0是XPath1.0的超集。它是对XPath1.0的扩展，它可以支持更加丰富的数据类型，并且XPath2.0保持了对XPath1.0的相对很好的向后兼容性，几乎所有的XPath2.0的返回结果都可以和XPath1.0保持一样。另外XPath2.0也是XSLT2.0和XQuery1.0的用于查询定位节点的主表达式语言。XQuery1.0是对XPath2.0的扩展。关于在XSLT和XQuery中使用XPath表达式定位节点的知识在后面的实例中会有所介绍。</p>
<blockquote>
<p>在学习XPath之前你应该对XML的节点，元素，属性，原子值（文本），处理指令，注释，根节点（文档节点），命名空间以及对节点间的关系如：父（Parent），子（Children），兄弟（Sibling），先辈（Ancestor），后代（Descendant）等概念有所了解。这里不在说明。</p>
</blockquote>
<h2 id="XPath路径表达式">XPath路径表达式</h2><p>在本小节下面的内容中你将可以学习到：</p>
<ul>
<li>路径表达式语法</li>
<li>相对/绝对路径</li>
<li>表达式上下文</li>
<li>谓词（筛选表达式）及轴的概念</li>
<li>运算符及特殊字符</li>
<li>常用表达式实例</li>
<li>函数及说明</li>
</ul>
<blockquote>
<p>这里给出一个实例Xml文件（见文章最后的附录）。下面的说明及实例都是基于该XML文件。</p>
</blockquote>
<h3 id="路径表达式语法">路径表达式语法</h3><p>路径 = 相对路径 | 绝对路径<br>XPath路径表达式 = 步进表达式 | 相对路径 “/“步进表达式。<br>步进表达式=轴 节点测试 谓词</p>
<p><strong>说明：</strong></p>
<p>其中轴表示步进表达式选择的节点和当前上下文节点间的树状关系（层次关系），节点测试指定步进表达式选择的节点名称扩展名，谓词即相当于过滤表达式以进一步过滤细化节点集。</p>
<p>谓词可以是0个或多个。多个多个谓词用逻辑操作符and， or连接。取逻辑非用not()函数。</p>
<p>请看一个典型的XPath查询表达式：<code>/messages/message//child::node()[@id=0]</code>，其中<code>/messages/message</code>是路径（绝对路径以”/“开始），<code>child::</code>是轴，表示在子节点下选择，<code>node()</code>是节点测试表示选择所有的节点。<code>[@id=0]</code>是谓词，表示选择所有有属性id并且值为0的节点。</p>
<h3 id="相对路径与绝对路径">相对路径与绝对路径</h3><p>如果”/“处在XPath表达式开头则表示文档根元素，（表达式中间作为分隔符用以分割每一个步进表达式）如：/messages/message/subject是一种绝对路径表示法，它表明是从文档根开始查找节点。假设当前节点是在第一个message节点【/messages/message[1]】，则路径表达式subject（路径前没有”/“）这种表示法称为相对路径，表明从当前节点开始查找。具体请见下面所述的”表达式上下文”。</p>
<h3 id="表达式上下文（Context）">表达式上下文（Context）</h3><p>上下文其实表示一种环境。以明确当前XPath路径表达式处在什么样的环境下执行。例如同样一个路径表达式处在对根节点操作的环境和处在对某一个特定子节点操作的环境下执行所获得的结果可能是完全不一样的。也就是说XPath路径表达式计算结果取决于它所处的上下文。</p>
<p><strong>XPath上下文基本有以下几种：</strong></p>
<ol>
<li><p><strong><em>当前节点(./)：</em></strong><br>如./sender表示选择当前节点下的sender节点集合（等同于下面所讲的”特定元素”，如：sender）</p>
</li>
<li><p><strong><em>父节点(../)：</em></strong><br>如../sender表示选择当前节点的父节点下的sender节点集合</p>
</li>
<li><p><strong><em>根元素（/）：</em></strong><br>如/messages表示选择从文档根节点下的messages节点集合.</p>
</li>
<li><p><strong><em>根节点（/</em>）：*</strong><br>这里的<em>是代表所有节点，但是根元素只有一个，所以这里表示根节点。/</em>的返回结果和/messages返回的结果一样都是messages节点。</p>
</li>
<li><p><strong><em>递归下降（//）:</em></strong><br>如当前上下文是messages节点。则：</p>
<p> <code>/messages//sender</code> :</p>
 <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">sender</span>&gt;</span>gkt1980@gmail.com<span class="tag">&lt;/<span class="title">sender</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">sender</span>&gt;</span>111@gmail.com<span class="tag">&lt;/<span class="title">sender</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">sender</span>&gt;</span>333@gmail.com<span class="tag">&lt;/<span class="title">sender</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<pre><code>`/messages/message[1]//sender`:

<span class="comment"><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">sender</span>&gt;</span>gkt1980@gmail.com<span class="tag">&lt;/<span class="title">sender</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">sender</span>&gt;</span>111@gmail.com<span class="tag">&lt;/<span class="title">sender</span>&gt;</span></span><br></pre></td></tr></table></figure></span>


我们可以看出XPath表达式返回的结果是：从当前节点开始递归步进搜索当前节点下的所有子节点找到满足条件的节点集。
</code></pre><ol>
<li><strong><em>特定元素</em></strong><br>如sender：表示选择当前节点下的sender节点集合，等同于（./sender）</li>
</ol>
<p><strong>注意：</strong>在执行XPath时一定要注意上下文。即当前是在哪个节点下执行XPath表达式。这在XMLDOM中很重要。如：在XMLDOM中的selectNodes,selectSingleNode方法的参数都是一个XPath表达式，此时这个XPath表达式的执行上下文就是调用这个方法的节点及它所在的环境。更多信息请参见：<a href="http://www.w3.org/TR/xpath20/" target="_blank" rel="external">http://www.w3.org/TR/xpath20/</a></p>
<h3 id="谓词（筛选表达式）及轴的概念">谓词（筛选表达式）及轴的概念</h3><p>XPath的谓词即筛选表达式，类似于SQL的where子句.</p>
<table>
<thead>
<tr>
<th style="text-align:left">轴名称</th>
<th style="text-align:right">结果</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">ancestor</td>
<td style="text-align:right">选取当前节点的所有先辈（父、祖父等）</td>
</tr>
<tr>
<td style="text-align:left">ancestor-or-self</td>
<td style="text-align:right">选取当前节点的所有先辈（父、祖父等）及当前节点本身</td>
</tr>
<tr>
<td style="text-align:left">attribute</td>
<td style="text-align:right">选取当前节点的所有属性</td>
</tr>
<tr>
<td style="text-align:left">child</td>
<td style="text-align:right">选取当前节点的所有子元素</td>
</tr>
<tr>
<td style="text-align:left">descendant</td>
<td style="text-align:right">选取当前节点的所有后代元素（子、孙等）</td>
</tr>
<tr>
<td style="text-align:left">descendant-or-self</td>
<td style="text-align:right">选取当前节点的所有后代元素（子、孙等）以及当前节点本身</td>
</tr>
<tr>
<td style="text-align:left">following</td>
<td style="text-align:right">选取文档中当前节点的结束标签之后的所有节点</td>
</tr>
<tr>
<td style="text-align:left">namespace</td>
<td style="text-align:right">选取当前节点的所有命名空间节点</td>
</tr>
<tr>
<td style="text-align:left">parent</td>
<td style="text-align:right">选取当前节点的父节点</td>
</tr>
<tr>
<td style="text-align:left">preceding</td>
<td style="text-align:right">直到所有这个节点的父辈节点，顺序选择每个父辈节点前的所有同级节点</td>
</tr>
<tr>
<td style="text-align:left">preceding-sibling</td>
<td style="text-align:right">选取当前节点之前的所有同级节点</td>
</tr>
<tr>
<td style="text-align:left">self</td>
<td style="text-align:right">选取当前节点</td>
</tr>
</tbody>
</table>
<h3 id="运算符及特殊字符">运算符及特殊字符</h3><table>
<thead>
<tr>
<th style="text-align:left">轴名称</th>
<th style="text-align:right">结果</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">/</td>
<td style="text-align:right">此路径运算符出现在模式开头时，表示应从根节点选择</td>
</tr>
<tr>
<td style="text-align:left">//</td>
<td style="text-align:right">从当前节点开始递归下降，此路径运算符出现在模式开头时，表示应从根节点递归下降</td>
</tr>
<tr>
<td style="text-align:left">.</td>
<td style="text-align:right">当前上下文</td>
</tr>
<tr>
<td style="text-align:left">..</td>
<td style="text-align:right">当前上下文节点父级</td>
</tr>
<tr>
<td style="text-align:left">*</td>
<td style="text-align:right">通配符；选择所有元素节点与元素名无关。（不包括文本，注释，指令等节点，如果也要包含这些节点请用node()函数）</td>
</tr>
<tr>
<td style="text-align:left">@</td>
<td style="text-align:right">属性名的前缀</td>
</tr>
<tr>
<td style="text-align:left">@*</td>
<td style="text-align:right">选择所有属性，与名称无关</td>
</tr>
<tr>
<td style="text-align:left">:</td>
<td style="text-align:right">命名空间分隔符；将命名空间前缀与元素名或属性名分隔</td>
</tr>
<tr>
<td style="text-align:left">( )</td>
<td style="text-align:right">括号运算符(优先级最高)，强制运算优先级</td>
</tr>
<tr>
<td style="text-align:left">[ ]</td>
<td style="text-align:right">应用筛选模式（即谓词，包括”过滤表达式”和”轴（向前/向后）”）</td>
</tr>
<tr>
<td style="text-align:left">[ ]</td>
<td style="text-align:right">下标运算符；用于在集合中编制索引</td>
</tr>
<tr>
<td style="text-align:left">\</td>
<td style="text-align:right"></td>
<td>两个节点集合的联合，如：`//messages/message/to\</td>
<td>//messages/message/cc`</td>
</tr>
<tr>
<td style="text-align:left">-</td>
<td style="text-align:right">减法</td>
</tr>
<tr>
<td style="text-align:left">div，</td>
<td style="text-align:right">浮点除法</td>
</tr>
<tr>
<td style="text-align:left">and, or</td>
<td style="text-align:right">逻辑运算</td>
</tr>
<tr>
<td style="text-align:left">mod</td>
<td style="text-align:right">求余</td>
</tr>
<tr>
<td style="text-align:left">not()</td>
<td style="text-align:right">逻辑非</td>
</tr>
<tr>
<td style="text-align:left">=</td>
<td style="text-align:right">等于</td>
</tr>
<tr>
<td style="text-align:left">！=</td>
<td style="text-align:right">不等于</td>
</tr>
<tr>
<td style="text-align:left">特殊比较运算符</td>
<td style="text-align:right"><code>&lt; 或者 &amp;lt;</code> <code>&lt;= 或者 &amp;lt;=</code> <code>&gt; 或者 &amp;gt;</code> <code>&gt;= 或者 &amp;gt;=</code> 需要转义的时候必须使用转义的形式，如在XSLT中，而在XMLDOM的scripting中不需要转义</td>
</tr>
</tbody>
</table>
<h3 id="常用表达式实例">常用表达式实例</h3><table>
<thead>
<tr>
<th style="text-align:left">表达式</th>
<th style="text-align:right">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">/</td>
<td style="text-align:right">Document Root文档根.   </td>
</tr>
<tr>
<td style="text-align:left">/*</td>
<td style="text-align:right">选择文档根下面的所有元素节点，即根节点（XML文档只有一个根节点）   </td>
</tr>
<tr>
<td style="text-align:left">/node()</td>
<td style="text-align:right">根元素下所有的节点（包括文本节点，注释节点等） </td>
</tr>
<tr>
<td style="text-align:left">/text()</td>
<td style="text-align:right">查找文档根节点下的所有文本节点 </td>
</tr>
<tr>
<td style="text-align:left">/messages/message</td>
<td style="text-align:right">messages节点下的所有message节点 </td>
</tr>
<tr>
<td style="text-align:left">/messages/message[1]</td>
<td style="text-align:right">messages节点下的第一个message节点    </td>
</tr>
<tr>
<td style="text-align:left">/messages/message[1]/self::node()</td>
<td style="text-align:right">第一个message节点（self轴表示自身，node()表示选择所有节点）  </td>
</tr>
<tr>
<td style="text-align:left">/messages/message[1]/node()</td>
<td style="text-align:right">第一个message节点下的所有子节点 </td>
</tr>
<tr>
<td style="text-align:left">/messages/message[1]/*[last()]</td>
<td style="text-align:right">第一个message节点的最后一个子节点    </td>
</tr>
<tr>
<td style="text-align:left">/messages/message[1]/[last()]</td>
<td style="text-align:right">Error，谓词前必须是节点或节点集  </td>
</tr>
<tr>
<td style="text-align:left">/messages/message[1]/node()[last()]</td>
<td style="text-align:right">第一个message节点的最后一个子节点    </td>
</tr>
<tr>
<td style="text-align:left">/messages/message[1]/text()</td>
<td style="text-align:right">第一个message节点的所有子节点  </td>
</tr>
<tr>
<td style="text-align:left">/messages/message[1]//text()</td>
<td style="text-align:right">第一个message节点下递归下降查找所有的文本节点（无限深度）    </td>
</tr>
<tr>
<td style="text-align:left">/messages/message[1]/child::node() 或 /messages/message[1]/node() 或 /messages/message[position()=1]/node()或 //message[@id=1] /node()</td>
<td style="text-align:right">第一个message节点下的所有子节点         </td>
</tr>
<tr>
<td style="text-align:left">//message[@id=1] //child::node()</td>
<td style="text-align:right">递归所有子节点（无限深度）   </td>
</tr>
<tr>
<td style="text-align:left">//message[position()=1]/node()</td>
<td style="text-align:right">选择id=1的message节点以及id=0的message节点</td>
</tr>
<tr>
<td style="text-align:left">/messages/message[1] /parent::*</td>
<td style="text-align:right">Messages节点</td>
</tr>
<tr>
<td style="text-align:left">/messages/message[1]/body/attachments/parent::node()</td>
<td style="text-align:right">attachments节点的父节点。父节点只有一个,所以node()和* 返回结果一样。</td>
</tr>
<tr>
<td style="text-align:left">/messages/message[1]/body/attachments/parent::* /messages/message[1]/body/attachments/..</td>
<td style="text-align:right">（..也表示父节点. 表示自身节点）</td>
</tr>
<tr>
<td style="text-align:left">//message[@id=0]/ancestor::*</td>
<td style="text-align:right">Ancestor轴表示所有的祖辈，父，祖父等。</td>
</tr>
<tr>
<td style="text-align:left"></td>
<td style="text-align:right">向上递归</td>
</tr>
<tr>
<td style="text-align:left">//message[@id=0]/ancestor-or-self::*</td>
<td style="text-align:right">向上递归,包含自身</td>
</tr>
<tr>
<td style="text-align:left">//message[@id=0]/ancestor::node()</td>
<td style="text-align:right">对比使用*,多一个文档根元素(Document root)</td>
</tr>
<tr>
<td style="text-align:left">/messages/message[1]/descendant::node() 或 //messages/message[1]//node()</td>
<td style="text-align:right">递归下降查找message节点的所有节点</td>
</tr>
<tr>
<td style="text-align:left">/messages/message[1]/sender/following::*</td>
<td style="text-align:right">查找第一个message节点的sender节点后的所有同级节点，并对每一个同级节点递归向下查找。</td>
</tr>
<tr>
<td style="text-align:left">//message[@id=1]/sender/following-sibling::*</td>
<td style="text-align:right">查找id=1的message节点的sender节点的所有后续的同级节点。</td>
</tr>
<tr>
<td style="text-align:left">//message[@id=1]/datetime/@date</td>
<td style="text-align:right">查找id=1的message节点的datetime节点的date属性</td>
</tr>
<tr>
<td style="text-align:left">//message[@id=1]/datetime[@date] 或 //message/datetime[attribute::date]</td>
<td style="text-align:right">查找id=1的message节点的所有含有date属性的datetime节点</td>
</tr>
<tr>
<td style="text-align:left">//message[datetime]</td>
<td style="text-align:right">查找所有含有datetime节点的message节点</td>
</tr>
<tr>
<td style="text-align:left">//message/datetime/attribute::<em> 或 //message/datetime/attribute::node() 或 //message/datetime/@</em></td>
<td style="text-align:right">返回message节点下datetime节点的所有属性节点</td>
</tr>
<tr>
<td style="text-align:left">//message/datetime[attribute::<em>] 或 //message/datetime[attribute::node()] 或 //message/datetime[@</em>] 或 //message/datetime[@node()]</td>
<td style="text-align:right">选择所有含有属性的datetime节点</td>
</tr>
<tr>
<td style="text-align:left">//attribute::*</td>
<td style="text-align:right">选择根节点下的所有属性节点</td>
</tr>
<tr>
<td style="text-align:left">//message[@id=0]/body/preceding::node()</td>
<td style="text-align:right">顺序选择body节点所在节点前的所有同级节点。（查找顺序为：先找到body节点的顶级节点（根节点）,得到根节点标签前的所有同级节点，执行完成后继续向下一级，顺序得到该节点标签前的所有同级节点，依次类推。）  注意：查找同级节点是顺序查找，而不是递归查找。</td>
</tr>
<tr>
<td style="text-align:left">//message[@id=0]/body/preceding-sibling::node()</td>
<td style="text-align:right">顺序查找body标签前的所有同级节点。（和上例一个最大的区别是：不从最顶层开始到body节点逐层查找。我们可以理解成少了一个循环，而只查找当前节点前的同级节点）</td>
</tr>
<tr>
<td style="text-align:left">//message[@id=1]//*[namespace::amazon]</td>
<td style="text-align:right">查找id=1的所有message节点下的所有命名空间为amazon的节点。</td>
</tr>
<tr>
<td style="text-align:left">//namespace::*</td>
<td style="text-align:right">文档中的所有的命名空间节点。（包括默认命名空间xmlns:xml）</td>
</tr>
<tr>
<td style="text-align:left">//message[@id=0]//books/*[local-name()=’book’]</td>
<td style="text-align:right">选择books下的所有的book节点， 注意：由于book节点定义了命名空间<amazone:book>.若写成//message[@id=0]//books/book则查找不出任何节点。</amazone:book></td>
</tr>
<tr>
<td style="text-align:left">//message[@id=0]//books/*[local-name()=’book’ and namespace-uri()=’<a href="http://www.amazon.com/books/schema" target="_blank" rel="external">http://www.amazon.com/books/schema</a>‘]</td>
<td style="text-align:right">选择books下的所有的book节点，(节点名和命名空间都匹配)</td>
</tr>
<tr>
<td style="text-align:left">//message[@id=0]//books/*[local-name()=’book’][year&gt;2006]</td>
<td style="text-align:right">选择year节点值&gt;2006的book节点</td>
</tr>
<tr>
<td style="text-align:left">//message[@id=0]//books/*[local-name()=’book’][1]/year&gt;2006</td>
<td style="text-align:right">指示第一个book节点的year节点值是否大于2006.    返回xs:boolean: true</td>
</tr>
</tbody>
</table>
<h3 id="函数及说明">函数及说明</h3><p>值得欣喜的是XPath函数和XSLT，XQuery等共享函数库，函数库为我们提供了功能丰富的各种函数的调用，我们也可以自定义自己的函数。这里不再对每个函数的用法逐一说明，英文好点的朋友直接去看看w3关于XPath函数的介绍吧：<a href="http://www.w3.org/TR/xquery-operators" target="_blank" rel="external">http://www.w3.org/TR/xquery-operators</a> 。中文的可以参考这个网站, <a href="http://www.w3school.com.cn/xpath/xpath_functions.asp" target="_blank" rel="external">http://www.w3school.com.cn/xpath/xpath_functions.asp</a></p>
<h2 id="XPath在DOM,XSLT及XQuery中的应用">XPath在DOM,XSLT及XQuery中的应用</h2><p>DOM：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="doctype">&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="title">html</span> <span class="attribute">xmlns</span>=<span class="value">"http://www.w3.org/1999/xhtml"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">title</span>&gt;</span>XPath Test<span class="tag">&lt;/<span class="title">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">script</span> <span class="attribute">language</span>=<span class="value">"javascript"</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">        <span class="keyword">var</span> xmlDoc = <span class="keyword">new</span> ActiveXObject(<span class="string">"Microsoft.XMLDOM"</span>);</span><br><span class="line">        xmlDoc.async=<span class="string">"false"</span>;</span><br><span class="line">        xmlDoc.load(<span class="string">"messages.xml"</span>);</span><br><span class="line">        xmlDoc.setProperty(<span class="string">"SelectionLanguage"</span>, <span class="string">"XPath"</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">var</span> sPath = <span class="string">"/messages/message[1]//books/*[local-name()='book']"</span>;</span><br><span class="line">        <span class="keyword">var</span> bookNodes = xmlDoc.selectNodes(sPath);</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">document</span>.write(<span class="string">"&lt;ul&gt;"</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> ( <span class="keyword">var</span> i = <span class="number">0</span>; i &lt; bookNodes.length; i++) &#123;</span><br><span class="line">            <span class="built_in">document</span>.write(<span class="string">"&lt;li&gt;"</span> + bookNodes[i].childNodes[<span class="number">0</span>].text + <span class="string">"&lt;/li&gt;"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">document</span>.write(<span class="string">"&lt;/ul&gt;"</span>);</span><br><span class="line">    </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><strong>注意：</strong></p>
<p>我们若使用new ActiveXObject(“Microsoft.XMLDOM”)则需要注意的是：因为早期的XMLDOM的SelectionLanguage属性默认是正则表达式，不是XPath语言。所以需要指定这样一条语句xmlDoc.setProperty(“SelectionLanguage”, “XPath”); 以支持XPath查询表达式。.</p>
<p>若没有指定SelectionLanguage属性值为XPath则要注意以下情况：</p>
<p>数组下标从0开始（我们知道在XPath查询表达式中数组下标是从1开始的）<br>不支持在XPath查询表达式中使用XPath函数。</p>
<p><strong>XSLT：</strong></p>
<p>见我的另外一篇关于如何使用XSLT的示范：<a href="http://www.cnblogs.com/ktgu/archive/2008/12/14/1354890.html" target="_blank" rel="external">http://www.cnblogs.com/ktgu/archive/2008/12/14/1354890.html</a></p>
<p><strong>XQuery查询表达式：</strong></p>
<figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">xquery</span> version <span class="string">"1.0"</span>;</span><br><span class="line">&lt;ul&gt;</span><br><span class="line">    &#123;</span><br><span class="line">        let <span class="variable">$i</span> := <span class="number">0</span></span><br><span class="line">        for <span class="variable">$x</span> in doc(<span class="string">"C:\Users\Administrator\Desktop\messages.xml"</span>)//message[@id=<span class="number">0</span>]//books/*[local-name()=<span class="string">'book'</span>]</span><br><span class="line">        where <span class="variable">$x</span>/year&gt;<span class="number">2006</span></span><br><span class="line">        order by <span class="variable">$x</span>/year descending</span><br><span class="line">        return &lt;li&gt;&#123; data(<span class="variable">$x</span>/name) &#125; &lt;/li&gt;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/ul&gt;</span><br></pre></td></tr></table></figure>
<p>返回结果：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">li</span>&gt;</span>Microsoft Visual C# 2008 Step by Step <span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">li</span>&gt;</span>Professional C# 2008 <span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>这里只是非常简单的介绍一下应用，XPath的其他应用场合和应用技巧大家自己总结吧，若有好的体验，觉得很爽的话，别忘了告诉哥们一下啊，大家共同提高：）</p>
<h2 id="附文中用到的XML文件">附文中用到的XML文件</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- edited with XMLSpy v2008 rel. 2 sp2 (http://www.altova.com) by Administrator --&gt;</span></span><br><span class="line"><span class="pi">&lt;?xml-stylesheet type="text/xsl" href="messages.xsl"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">messages</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">message</span> <span class="attribute">id</span>=<span class="value">"1"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">sender</span>&gt;</span>gukaitong@gmail.com<span class="tag">&lt;/<span class="title">sender</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">to</span>&gt;</span>anonymous@gmail.com </span><br><span class="line">        <span class="tag">&lt;<span class="title">group</span> <span class="attribute">name</span>=<span class="value">"IT"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">address</span>&gt;</span>111@gmail.com<span class="tag">&lt;/<span class="title">address</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">address</span>&gt;</span>222@gmail.com<span class="tag">&lt;/<span class="title">address</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">address</span>&gt;</span>aaa@gmail.com<span class="tag">&lt;/<span class="title">address</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">address</span>&gt;</span>bbb@gmail.com<span class="tag">&lt;/<span class="title">address</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">address</span>&gt;</span>ccc@gmail.com<span class="tag">&lt;/<span class="title">address</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">group</span>&gt;</span><span class="tag">&lt;/<span class="title">to</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">subject</span>&gt;</span>This is a sample<span class="tag">&lt;/<span class="title">subject</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">datetime</span> <span class="attribute">date</span>=<span class="value">"2008-12-11"</span> <span class="attribute">time</span>=<span class="value">"12:00:00"</span> <span class="attribute">formatted</span>=<span class="value">"12/11/2008 12:00AM"</span>&gt;</span>2008-12-11T12:00:00Z<span class="tag">&lt;/<span class="title">datetime</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">body</span>&gt;</span>Are you interested in? </span><br><span class="line">        <span class="tag">&lt;<span class="title">attachments</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">attachment</span> <span class="attribute">id</span>=<span class="value">"1"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">message</span> <span class="attribute">id</span>=<span class="value">"0"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="title">sender</span>&gt;</span>anonymous@gmail.com<span class="tag">&lt;/<span class="title">sender</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="title">to</span>&gt;</span>gukaitong@gmail.com<span class="tag">&lt;/<span class="title">to</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="title">body</span>&gt;</span>We strongly recommend the following books </span><br><span class="line">                    <span class="tag">&lt;<span class="title">books</span> <span class="attribute">xmlns:amazon</span>=<span class="value">"http://www.amazon.com/books/schema"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="title">amazon:book</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="title">name</span>&gt;</span>Professional C# 2008<span class="tag">&lt;/<span class="title">name</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="title">country</span>&gt;</span>USA<span class="tag">&lt;/<span class="title">country</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="title">price</span>&gt;</span>37.79<span class="tag">&lt;/<span class="title">price</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="title">year</span>&gt;</span>2007<span class="tag">&lt;/<span class="title">year</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="title">amazon:book</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="title">amazon:book</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="title">name</span>&gt;</span>Microsoft Visual C# 2008 Step by Step<span class="tag">&lt;/<span class="title">name</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="title">country</span>&gt;</span>USA<span class="tag">&lt;/<span class="title">country</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="title">price</span>&gt;</span>26.39<span class="tag">&lt;/<span class="title">price</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="title">year</span>&gt;</span>2008<span class="tag">&lt;/<span class="title">year</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="title">amazon:book</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="title">amazon:book</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="title">name</span>&gt;</span>C# in Depth<span class="tag">&lt;/<span class="title">name</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="title">country</span>&gt;</span>USA<span class="tag">&lt;/<span class="title">country</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="title">price</span>&gt;</span>29.69<span class="tag">&lt;/<span class="title">price</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="title">year</span>&gt;</span>2006<span class="tag">&lt;/<span class="title">year</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="title">amazon:book</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="title">amazon:book</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="title">name</span>&gt;</span>Thinking in Java<span class="tag">&lt;/<span class="title">name</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="title">country</span>&gt;</span>USA<span class="tag">&lt;/<span class="title">country</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="title">price</span>&gt;</span>23.69<span class="tag">&lt;/<span class="title">price</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="title">year</span>&gt;</span>2004<span class="tag">&lt;/<span class="title">year</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="title">amazon:book</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="title">books</span>&gt;</span><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="title">message</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="title">attachment</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">attachments</span>&gt;</span><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">message</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">message</span> <span class="attribute">id</span>=<span class="value">"2"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">sender</span>&gt;</span>333@gmail.com<span class="tag">&lt;/<span class="title">sender</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">to</span>&gt;</span>444@gmail.com<span class="tag">&lt;/<span class="title">to</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">subject</span>&gt;</span>No title<span class="tag">&lt;/<span class="title">subject</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">body</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">message</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">messages</span>&gt;</span></span><br></pre></td></tr></table></figure>
<hr>
<p>请作者吃饭可发邮件到29283212@qq.com</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>经常在工作中会使用到XPath的相关知识，但每次总会在一些关键的地方不记得或不太清楚，所以免不了每次总要查一些零碎的知识，感觉即很烦又浪费时间，所以对XPath归纳及总结一下。</p>
<p>在这篇文章中你将能学习到：</p>
<ul>
<li>XPath简介</li>
<]]>
    </summary>
    
      <category term="dom" scheme="http://bafeimao.net/tags/dom/"/>
    
      <category term="xml" scheme="http://bafeimao.net/tags/xml/"/>
    
      <category term="xpath" scheme="http://bafeimao.net/tags/xpath/"/>
    
      <category term="xquery" scheme="http://bafeimao.net/tags/xquery/"/>
    
      <category term="xslt" scheme="http://bafeimao.net/tags/xslt/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[IP负载均衡 - LVS/NAT配置详解]]></title>
    <link href="http://bafeimao.net/2008/08/31/vs-nat-config-in-detail/"/>
    <id>http://bafeimao.net/2008/08/31/vs-nat-config-in-detail/</id>
    <published>2008-08-31T05:25:59.000Z</published>
    <updated>2015-10-31T08:06:55.000Z</updated>
    <content type="html"><![CDATA[<p>本文记录LVA/NAT模式的配置过程，先对接下来出现的名词做必要的解释</p>
<ul>
<li>Director（负载均衡器）</li>
<li>RS（Real Server，真实服务器）</li>
<li>VIP（Virtual IP，虚拟IP，该IP用在负载均衡器上用以对外提供服务）</li>
<li>DIP（Director的内网IP）</li>
</ul>
<h2 id="1-_Director服务器配置">1. Director服务器配置</h2><p>在NAT模式下，Director需要能够转发报文给RS，因此首先要开启IP路由转发功能，缺省情况是默认关闭的。</p>
<h4 id="开启路由转发功能">开启路由转发功能</h4><figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="comment"># 开启IP路由转发，以便Director能将IP报文转发给对应的RS</span></span><br><span class="line">&gt; `$ echo <span class="number">1</span> &gt; /<span class="keyword">proc</span>/sys/net/ipv4/ip_forward`</span><br></pre></td></tr></table></figure>
<p>或者打开相关配置文件进行如下设置</p>
<figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>vim /etc/sysctl.conf</span><br><span class="line"><span class="comment"># 设置：net.ipv4.ip_forward = 1</span></span><br><span class="line"><span class="variable">$ </span>sysctl -p</span><br></pre></td></tr></table></figure>
<h4 id="绑定VIP到当前网卡">绑定VIP到当前网卡</h4><p>VIP作为对外服务的IP，要将其绑定到Director的网卡上（下面是使用了别名）</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ifconfig eth0:<span class="number">1</span> <span class="number">10.0</span><span class="number">.0</span><span class="number">.1</span> broadcast <span class="number">10.255</span><span class="number">.255</span><span class="number">.255</span> netmask <span class="number">255.0</span><span class="number">.0</span><span class="number">.0</span> up</span><br></pre></td></tr></table></figure>
<h4 id="设置Director，并且添加RS">设置Director，并且添加RS</h4><p>Linux内核为我们提供了用于管理ipvs模块的工具<code>ipvsadm</code>，下面利用该工具来对Director进行相关设置，包括：添加RS以及设置调度算法等。</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ ipvsadm -C</span><br><span class="line">$ ipvsadm -A -t <span class="number">10.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">80</span> -s rr</span><br><span class="line">$ ipvsadm -a -t <span class="number">10.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">80</span> -r <span class="number">172.16</span><span class="number">.115</span><span class="number">.103</span>:<span class="number">80</span> -m</span><br><span class="line">$ ipvsadm -a -t <span class="number">10.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">80</span> -r <span class="number">172.16</span><span class="number">.115</span><span class="number">.104</span>:<span class="number">80</span> -m</span><br></pre></td></tr></table></figure>
<h4 id="检查IPVS模块配置信息">检查IPVS模块配置信息</h4><p>完成配置，现在可以使用命令查看ipvs模块配置信息</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ ipvsadm -ln</span><br><span class="line"></span><br><span class="line">IP Virtual Server version <span class="number">1.2</span><span class="number">.1</span> (size=<span class="number">4096</span>)</span><br><span class="line">Prot LocalAddress:Port Scheduler Flags</span><br><span class="line">  -&gt; RemoteAddress:Port           Forward Weight ActiveConn InActConn</span><br><span class="line">TCP  <span class="number">10.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">80</span> rr</span><br><span class="line">  -&gt; <span class="number">172.16</span><span class="number">.115</span><span class="number">.103</span>:<span class="number">80</span>            Masq    <span class="number">1</span>      <span class="number">0</span>          <span class="number">1</span>         </span><br><span class="line">  -&gt; <span class="number">172.16</span><span class="number">.115</span><span class="number">.104</span>:<span class="number">80</span>            Masq    <span class="number">1</span>      <span class="number">0</span>          <span class="number">1</span></span><br></pre></td></tr></table></figure>
<p>至此，完成了对Director的配置！</p>
<h3 id="2-_RS服务器配置">2. RS服务器配置</h3><h4 id="设置默认网关为DIP">设置默认网关为DIP</h4><p>由于在NAT模式下，RS处理报文完成后，需要将响应报文回发给Director，因此，最简单的办法就是在RS的路由表中添加一个新的默认路由为：DIP，除此以外，RS不用做任何其他配置。</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ route del <span class="keyword">default</span></span><br><span class="line">$ route add <span class="keyword">default</span> gw <span class="number">172.16</span><span class="number">.115</span><span class="number">.101</span></span><br></pre></td></tr></table></figure>
<p>然后，检查刚刚添加的默认路由是否在路由表中</p>
<figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>route</span><br></pre></td></tr></table></figure>
<h4 id="确认VS/NAT是否正常工作">确认VS/NAT是否正常工作</h4><p>在每台RS上都进行如下配置：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装Apache web服务器</span></span><br><span class="line">$ yum -y install httpd.x86_64</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动apache服务器</span></span><br><span class="line">$ service httpd start</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建index.html,并设置简单的内容,其中：RS1上的index.html内容设置为'web1',RS2上设置为'web2'</span></span><br><span class="line">$ vim /var/www/html/index.html </span><br><span class="line"></span><br><span class="line"><span class="comment"># 为了测试方便，关闭RS上的防火墙</span></span><br><span class="line">$ service iptables stop</span><br></pre></td></tr></table></figure>
<p>在Client上确认IPVS是否正常的转发请求到相应的RS,多次执行curl请求VIP</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ curl <span class="number">10.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line">web1</span><br><span class="line">$ curl <span class="number">10.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line">web2</span><br><span class="line">$ curl <span class="number">10.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line">web1</span><br></pre></td></tr></table></figure>
<p>从上述命令输出可以看出，交替输出web1和web2字符串，说明Director已经正常工作，并且执行的是轮询策略RR。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>本文记录LVA/NAT模式的配置过程，先对接下来出现的名词做必要的解释</p>
<ul>
<li>Director（负载均衡器）</li>
<li>RS（Real Server，真实服务器）</li>
<li>VIP（Virtual IP，虚拟IP，该IP用在负载均衡器上用]]>
    </summary>
    
      <category term="howto" scheme="http://bafeimao.net/tags/howto/"/>
    
      <category term="ipvs" scheme="http://bafeimao.net/tags/ipvs/"/>
    
      <category term="linux" scheme="http://bafeimao.net/tags/linux/"/>
    
      <category term="load balancer" scheme="http://bafeimao.net/tags/load-balancer/"/>
    
      <category term="lvs" scheme="http://bafeimao.net/tags/lvs/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[IP负载均衡 - VS/NAT原理详解]]></title>
    <link href="http://bafeimao.net/2008/08/19/vs-nat-principle-in-detail/"/>
    <id>http://bafeimao.net/2008/08/19/vs-nat-principle-in-detail/</id>
    <published>2008-08-19T08:21:25.000Z</published>
    <updated>2015-10-31T08:06:58.000Z</updated>
    <content type="html"><![CDATA[<h3 id="工作原理">工作原理</h3><p> VS/NAT（Virtual Server via Network Address Translation）的意思是“网络地址转换”，其原理是：调度器（也称之为：负载均衡器，Director等）收到来自客户端的“请求报文”后，根据指定的调度算法，将请求报文转发（负载分发）给隐藏在调度器后面的一组“真实服务器”（以下称RS）中的某台服务器去处理，当真实服务器处理完成后，又将报文发给Director，Director再一次修改IP数据包内种中的源地址和源端口，然后将响应报文发回给客户端，至此，完成整个负载分发过程。</p>
<p>很多硬件负载均衡设备就是基于NAT原理的。</p>
<h3 id="基本要求">基本要求</h3><ul>
<li>Director至少需要绑定两个IP（DIP和VIP），其中VIP是作为集群中对外服务的唯一接口；DIP用于连接内部RS服务器组，使调度器和RS服务器组连接在内部LAN中</li>
<li>调度器需要配置成可以转发IP数据报（设置ip_forward=1）</li>
<li>RS必须设置默认网关为DIP，以便响应报文能够发回到Director</li>
<li>RS和Director必须在同一个子网中，否则RS不能正确将响应报文发送到Director</li>
<li>如果Client和调度器位于同一网段，那么就不能使用VS/NAT模式，此时可配置成VS/DR模式。（请思考为什么？）</li>
</ul>
<h3 id="报文转发的详细处理流程">报文转发的详细处理流程</h3><ul>
<li>来自客户端的请求报文发送到调度器（通过VIP）</li>
<li>调度器网卡根据数据帧首部MAC地址发现是发给自己的，因此收下该数据帧并将其发给上层网卡驱动程序，网卡驱动去掉帧首部得到IP数据包内容并将其传给IP层处理。</li>
<li>IPVS模块通过调度算法（或从连接映射hash表中找到映射，如果之前已经映射过的话），得到一台真实服务器（Real Server / RS），假设为RS1。</li>
<li>修改IP数据报首部的“目标IP地址”和“目标端口”为RS1的IP和端口，然后将该数据包直接又发回给本机ARP模块处理</li>
<li>ARP模块为IP地址找到对应的mac地址（这里是RS1网卡所对应的MAC地址，关于ARP如何做地址映射可参考<a href="http://baike.baidu.com/view/111783.htm" target="_blank" rel="external">W.Richard Stevens</a>编写的《<a href="http://book.douban.com/subject/1088054/" target="_blank" rel="external">TCP/IP详解-卷一</a>》）</li>
<li>网卡驱动重新封装数据帧，并直接将数据帧发送到位于同一网络的RS1机器的网络接口卡</li>
<li>RS1收到从调度器发来的数据帧，发现目标mac地址是自己，同时IP数据包内容中的目标地址也是本主机地址，所以就会处理该报文并交由响应端口对应的应用程序去处理</li>
<li>当RS处理完成后，会设置响应报文中的“目标IP地址=CIP(CIP表示客户端IP), 源IP地址=RIP”，源端口=RS1的对应端口”</li>
<li>RS搜索本机路由表，发现CIP并不是一个直接相连的主机也不是位于同一共享网络中，因此使用默认路由(DIP)进行路由转发，此时响应报文被发送到DIP（即调度器的IP）。</li>
<li>调度器收到来自RS的响应报文，再次修改源IP地址为VIP以及源端口为调度器的端口，然后将报文重新发回给客户端</li>
</ul>
<p>至此，对报文的完整流程处理结束!!!</p>
<blockquote>
<p>NOTE: 调度器不但会修改“目标IP”还会修改“目标端口”，因此该模式支持端口映射（其他模式不支持）</p>
</blockquote>
<h3 id="存在的问题及解决方案">存在的问题及解决方案</h3><h4 id="存在的问题">存在的问题</h4><p>在VS/NAT工作模式中，请求报文和响应报文都要经过Director，因此Director将会成为整个集群的瓶颈，因此集群的吞吐量将受制于Director的处理速度以及Director服务器的出口带宽，由于IPVS工作在内核，处理速度非常高，因此调度器的主要瓶颈来自于调度器的网卡带宽上。</p>
<h4 id="解决方案">解决方案</h4><p><strong>方案1：</strong>为应付流量增长，可以升级Director服务器的网卡为千兆网卡或万兆网卡，同时Director与RS连接的交换机也要换成千兆或万兆的。除此以外，还要考虑Director服务器的总线带宽，看操作系统以及服务器的硬件配置能否应付处理的了那么大的流量。</p>
<p><strong>方案2：</strong>结合DNS-RR（DNS轮询策略）。将大的VS/NAT集群按照某种策略（如按地域或业务模块）划分成多个小的集群，结合DNS-RR组成两级负载均衡调度方式，由此每个小集群中的Director则只分担了部分流量。</p>
<p><strong>方案3：</strong>考虑到多数应用请求报文小而响应报文大的这种<strong>非对称性</strong>特点，我们可以将VS/NAT模式换成VS/DR模式，这将会极大的提升调度器的吞吐率。</p>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="工作原理">工作原理</h3><p> VS/NAT（Virtual Server via Network Address Translation）的意思是“网络地址转换”，其原理是：调度器（也称之为：负载均衡器，Director等）收到来自客户端的“请求报文”后，]]>
    </summary>
    
      <category term="ipvs" scheme="http://bafeimao.net/tags/ipvs/"/>
    
      <category term="linux" scheme="http://bafeimao.net/tags/linux/"/>
    
      <category term="load balancer" scheme="http://bafeimao.net/tags/load-balancer/"/>
    
      <category term="lvs" scheme="http://bafeimao.net/tags/lvs/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[如何启动多个MySQL实例]]></title>
    <link href="http://bafeimao.net/2008/04/18/howto-config-multi-mysql-instances/"/>
    <id>http://bafeimao.net/2008/04/18/howto-config-multi-mysql-instances/</id>
    <published>2008-04-18T11:23:15.000Z</published>
    <updated>2015-10-18T05:24:25.000Z</updated>
    <content type="html"><![CDATA[<p>首先，要在/etc/my.cnf文件中追加[mysqld_multi]的相关配置（这可以通过执行mysqld_multi –example获取配置文件内容模板）</p>
<figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld_multi <span class="comment">--example</span></span><br></pre></td></tr></table></figure>
<p>将下面文件内容追加到/etc/my.cnf文件末尾</p>
<figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">[mysqld_multi]</span></span><br><span class="line"><span class="setting">mysqld     = <span class="value">/usr/bin/mysqld_safe</span></span></span><br><span class="line"><span class="setting">mysqladmin = <span class="value">/usr/bin/mysqladmin</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">#user       = multi_admin</span></span><br><span class="line"><span class="comment">#password   = 1234+aaaa</span></span><br><span class="line"><span class="title"></span><br><span class="line">[mysqld1]</span></span><br><span class="line"><span class="setting">port       = <span class="value"><span class="number">3306</span></span></span></span><br><span class="line"><span class="setting">datadir    = <span class="value">/var/lib/mysql1</span></span></span><br><span class="line"><span class="setting">socket     = <span class="value">/var/lib/mysql1/mysql.sock</span></span></span><br><span class="line"><span class="setting">pid-file   = <span class="value">/var/run/mysqld/mysqld1.pid</span></span></span><br><span class="line"><span class="comment">#language   = /usr/share/mysql/english</span></span><br><span class="line"><span class="setting">user       = <span class="value">mysql</span></span></span><br><span class="line"><span class="title"></span><br><span class="line">[mysqld2]</span></span><br><span class="line"><span class="setting">port       = <span class="value"><span class="number">3307</span></span></span></span><br><span class="line"><span class="setting">datadir    = <span class="value">/var/lib/mysql2</span></span></span><br><span class="line"><span class="setting">socket     = <span class="value">/var/lib/mysql2/mysql.sock</span></span></span><br><span class="line"><span class="setting">pid-file   = <span class="value">/var/run/mysqld/mysqld2.pid</span></span></span><br><span class="line"><span class="comment">#language   = /usr/share/mysql/english</span></span><br><span class="line"><span class="setting">user       = <span class="value">mysql</span></span></span><br><span class="line"><span class="title"></span><br><span class="line">[mysqld3]</span></span><br><span class="line"><span class="setting">port       = <span class="value"><span class="number">3308</span></span></span></span><br><span class="line"><span class="setting">datadir    = <span class="value">/var/lib/mysql3</span></span></span><br><span class="line"><span class="setting">socket     = <span class="value">/var/lib/mysql3/mysql.sock</span></span></span><br><span class="line"><span class="setting">pid-file   = <span class="value">/var/run/mysqld/mysqld3.pid</span></span></span><br><span class="line"><span class="comment">#language   = /usr/share/mysql/english</span></span><br><span class="line"><span class="setting">user       = <span class="value">mysql</span></span></span><br></pre></td></tr></table></figure>
<p>查看各个mysqld实例的运行状态</p>
<figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost etc]<span class="comment"># mysqld_multi report</span></span><br><span class="line">Reporting MySQL servers</span><br><span class="line">MySQL server <span class="keyword">from</span> group: mysqld1 <span class="keyword">is</span> <span class="keyword">not</span> <span class="property">running</span></span><br><span class="line">MySQL server <span class="keyword">from</span> group: mysqld2 <span class="keyword">is</span> <span class="keyword">not</span> <span class="property">running</span></span><br><span class="line">MySQL server <span class="keyword">from</span> group: mysqld3 <span class="keyword">is</span> <span class="keyword">not</span> <span class="property">running</span></span><br></pre></td></tr></table></figure>
<p>三个实例都还没有启动过，下面开始启动MySQL实例</p>
<figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="constant">@localhost</span> etc]<span class="preprocessor"># mysqld_multi start 1</span></span><br></pre></td></tr></table></figure>
<p>检查运行状态<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost etc]<span class="comment"># mysqld_multi report</span></span><br><span class="line">Reporting MySQL servers</span><br><span class="line">MySQL server <span class="keyword">from</span> group: mysqld1 <span class="keyword">is</span> <span class="keyword">not</span> <span class="property">running</span></span><br><span class="line">MySQL server <span class="keyword">from</span> group: mysqld2 <span class="keyword">is</span> <span class="keyword">not</span> <span class="property">running</span></span><br><span class="line">MySQL server <span class="keyword">from</span> group: mysqld3 <span class="keyword">is</span> <span class="keyword">not</span> <span class="property">running</span></span><br></pre></td></tr></table></figure></p>
<p>发现mysqld1仍没有启动成功，怎么回事？</p>
<p>查看mysqld日志，发现端口号被占用了<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt;<span class="keyword">cat</span> /<span class="keyword">var</span>/<span class="keyword">log</span>/.mysqld.<span class="literal">log</span></span><br><span class="line">...</span><br><span class="line">150519 16:50:08 [<span class="keyword">ERROR</span>] Can't start server: Bind <span class="keyword">on</span> TCP/IP port: Address already <span class="keyword">in</span> <span class="keyword">use</span></span><br><span class="line">150519 16:50:08 [<span class="keyword">ERROR</span>] <span class="keyword">Do</span> you already have another mysqld server running <span class="keyword">on</span> port: 3306 ?</span><br><span class="line">150519 16:50:08 [<span class="keyword">ERROR</span>] Aborting</span><br><span class="line">...</span><br></pre></td></tr></table></figure></p>
<p>这是因为本机上mysqld默认实例正在启动中<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost etc]<span class="comment"># service mysqld status</span></span><br><span class="line">mysqld (pid  <span class="number">4535</span>) <span class="keyword">is</span> <span class="property">running</span>...</span><br></pre></td></tr></table></figure></p>
<p>我们要将mysqld服务停掉</p>
<figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">[root@localhost etc]</span># service mysqld stop</span><br><span class="line">Stopping mysqld:                                           <span class="string">[  OK  ]</span></span><br></pre></td></tr></table></figure>
<p>再次启动mysqld1,并检查是否成功</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost etc]# mysqld_multi <span class="operator"><span class="keyword">start</span> <span class="number">1</span> &amp;&amp; mysqld_multi report</span><br><span class="line">Reporting MySQL servers</span><br><span class="line">MySQL <span class="keyword">server</span> <span class="keyword">from</span> <span class="keyword">group</span>: mysqld1 <span class="keyword">is</span> <span class="keyword">not</span> running</span><br><span class="line">MySQL <span class="keyword">server</span> <span class="keyword">from</span> <span class="keyword">group</span>: mysqld2 <span class="keyword">is</span> <span class="keyword">not</span> running</span><br><span class="line">MySQL <span class="keyword">server</span> <span class="keyword">from</span> <span class="keyword">group</span>: mysqld3 <span class="keyword">is</span> <span class="keyword">not</span> running</span></span><br></pre></td></tr></table></figure>
<p><strong>Damn it !!!</strong> 仍然没有成功，再次检查日志（/var/log/mysqld.log)<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/usr/libexec/mysqld: <span class="keyword">Table</span> 'mysql.<span class="keyword">plugin</span>' doesn't exist</span><br><span class="line">150519 17:03:27 [<span class="keyword">ERROR</span>] Can't <span class="keyword">open</span> the mysql.<span class="keyword">plugin</span> <span class="keyword">table</span>. Please <span class="keyword">run</span> mysql_upgrade to create it.</span><br></pre></td></tr></table></figure></p>
<p>这是因为datadir下还没有安装默认数据库（注：datadir指定的目录会在首次执行mysqld_mult start 1时自动创建并且添加了如下几个文件）<br><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="variable">@localhost</span> <span class="class"><span class="keyword">lib</span>]<span class="comment"># ls /var/lib/mysql1</span></span></span><br><span class="line">ibdata1  ib_logfile0  ib_logfile1</span><br></pre></td></tr></table></figure></p>
<p>在datadir下安装数据库</p>
<figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="variable">@localhost</span> mysql1]<span class="comment"># mysql_install_db --datadir=/var/lib/mysql1</span></span><br><span class="line">Installing MySQL <span class="keyword">system</span> tables...</span><br><span class="line">OK</span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<p>安装数据成功后，再执行mysql1，成功！</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost mysql1]# mysqld_multi <span class="operator"><span class="keyword">start</span> <span class="number">1</span></span><br><span class="line">[root@localhost mysql1]# mysqld_multi report</span><br><span class="line">Reporting MySQL servers</span><br><span class="line">MySQL <span class="keyword">server</span> <span class="keyword">from</span> <span class="keyword">group</span>: mysqld1 <span class="keyword">is</span> running</span><br><span class="line">MySQL <span class="keyword">server</span> <span class="keyword">from</span> <span class="keyword">group</span>: mysqld2 <span class="keyword">is</span> <span class="keyword">not</span> running</span><br><span class="line">MySQL <span class="keyword">server</span> <span class="keyword">from</span> <span class="keyword">group</span>: mysqld3 <span class="keyword">is</span> <span class="keyword">not</span> running</span></span><br></pre></td></tr></table></figure>
<p>同样的步骤，将mysqld2,mysql3配置好,然后一并启动三个实例</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost mysql1]# mysqld_multi <span class="operator"><span class="keyword">start</span> <span class="number">1</span>-<span class="number">3</span></span><br><span class="line">[root@localhost mysql1]# mysqld_multi report</span><br><span class="line">Reporting MySQL servers</span><br><span class="line">MySQL <span class="keyword">server</span> <span class="keyword">from</span> <span class="keyword">group</span>: mysqld1 <span class="keyword">is</span> running</span><br><span class="line">MySQL <span class="keyword">server</span> <span class="keyword">from</span> <span class="keyword">group</span>: mysqld2 <span class="keyword">is</span> running</span><br><span class="line">MySQL <span class="keyword">server</span> <span class="keyword">from</span> <span class="keyword">group</span>: mysqld3 <span class="keyword">is</span> running</span></span><br></pre></td></tr></table></figure>
<p>到/var/run/mysqld下瞧瞧，发现有三个pid文件，它们分别对应三个mysqld进程<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost mysql1]# <span class="keyword">ls</span> /<span class="keyword">var</span>/<span class="keyword">run</span>/mysqld</span><br><span class="line">mysqld1.pid  mysqld2.pid  mysqld3.pid</span><br></pre></td></tr></table></figure></p>
<p>通过指定的socket连接mysqld实例<br><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="constant">@localhost</span> mysql1]<span class="preprocessor"># mysql -S /var/lib/mysql1/mysql.sock</span></span><br></pre></td></tr></table></figure></p>
<p>显示pid信息<br><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="header">mysql&gt; show variables like '%pid%';</span><br><span class="line">+---------------+-----------------------------+</span></span><br><span class="line"><span class="header">| Variable_name | Value                       |</span><br><span class="line">+---------------+-----------------------------+</span></span><br><span class="line"><span class="header">| pid_file      | /var/run/mysqld/mysqld1.pid |</span><br><span class="line">+---------------+-----------------------------+</span></span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure></p>
<p>显示port<br><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="header">mysql&gt; show variables like 'port%';</span><br><span class="line">+---------------+-------+</span></span><br><span class="line"><span class="header">| Variable_name | Value |</span><br><span class="line">+---------------+-------+</span></span><br><span class="line"><span class="header">| port          | 3306  |</span><br><span class="line">+---------------+-------+</span></span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>首先，要在/etc/my.cnf文件中追加[mysqld_multi]的相关配置（这可以通过执行mysqld_multi –example获取配置文件内容模板）</p>
<figure class="highlight applescript"><table><tr><td]]>
    </summary>
    
      <category term="howto" scheme="http://bafeimao.net/tags/howto/"/>
    
      <category term="mysql" scheme="http://bafeimao.net/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[如何手动为MyEclipse添加对Spring和Hibernate框架的支持]]></title>
    <link href="http://bafeimao.net/2008/04/18/howto-support-spring-hibernate-natures-in-myeclipse-in-manual/"/>
    <id>http://bafeimao.net/2008/04/18/howto-support-spring-hibernate-natures-in-myeclipse-in-manual/</id>
    <published>2008-04-18T05:04:31.000Z</published>
    <updated>2015-10-18T05:12:06.000Z</updated>
    <content type="html"><![CDATA[<p>打开.project项目文件，找到<natures>节点</natures></p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;natures&gt;</span><br><span class="line">          &lt;!-- 支持hibernate --&gt;</span><br><span class="line">          &lt;nature&gt;com<span class="class">.genuitec</span><span class="class">.eclipse</span><span class="class">.hibernate</span><span class="class">.hibernatenature</span>&lt;/nature&gt;</span><br><span class="line">          &lt;!-- 支持Spring Framework --&gt;</span><br><span class="line">          &lt;nature&gt;com<span class="class">.genuitec</span><span class="class">.eclipse</span><span class="class">.springframework</span><span class="class">.springnature</span>&lt;/nature&gt;</span><br><span class="line">          &lt;nature&gt;com<span class="class">.genuitec</span><span class="class">.eclipse</span><span class="class">.ast</span><span class="class">.deploy</span><span class="class">.core</span><span class="class">.deploymentnature</span>&lt;/nature&gt;</span><br><span class="line">          &lt;nature&gt;org<span class="class">.maven</span><span class="class">.ide</span><span class="class">.eclipse</span><span class="class">.maven2Nature</span>&lt;/nature&gt;</span><br><span class="line">          &lt;nature&gt;com<span class="class">.genuitec</span><span class="class">.eclipse</span><span class="class">.j2eedt</span><span class="class">.core</span><span class="class">.webnature</span>&lt;/nature&gt;</span><br><span class="line">          &lt;nature&gt;org<span class="class">.eclipse</span><span class="class">.jdt</span><span class="class">.core</span><span class="class">.javanature</span>&lt;/nature&gt;</span><br><span class="line">          &lt;nature&gt;org<span class="class">.eclipse</span><span class="class">.wst</span><span class="class">.jsdt</span><span class="class">.core</span><span class="class">.jsNature</span>&lt;/nature&gt;</span><br><span class="line">&lt;/natures&gt;</span><br></pre></td></tr></table></figure>
<p>同时在<buildspec>节点下添加了两个<buildcommand>节点</buildcommand></buildspec></p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">buildSpec</span>&gt;</span></span><br><span class="line">     ...</span><br><span class="line">     <span class="tag">&lt;<span class="title">buildCommand</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="title">name</span>&gt;</span>com.genuitec.eclipse.springframework.springbuilder<span class="tag">&lt;/<span class="title">name</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="title">arguments</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;/<span class="title">arguments</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="title">buildCommand</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="title">buildCommand</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="title">name</span>&gt;</span>com.genuitec.eclipse.hibernate.HibernateBuilder<span class="tag">&lt;/<span class="title">name</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="title">arguments</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;/<span class="title">arguments</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="title">buildCommand</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">buildSpec</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><strong>说明：</strong> </p>
<p>以上操作都可以在myclipse IDE中通过界面操作，手动操作的意图只是想了解myeclipse在背后都为我们做了些什么</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>打开.project项目文件，找到<natures>节点</natures></p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span]]>
    </summary>
    
      <category term="hibernate" scheme="http://bafeimao.net/tags/hibernate/"/>
    
      <category term="myeclipse" scheme="http://bafeimao.net/tags/myeclipse/"/>
    
      <category term="spring" scheme="http://bafeimao.net/tags/spring/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[如何配置mysql主从复制]]></title>
    <link href="http://bafeimao.net/2007/06/18/howto-config-mysql-replication/"/>
    <id>http://bafeimao.net/2007/06/18/howto-config-mysql-replication/</id>
    <published>2007-06-18T05:19:24.000Z</published>
    <updated>2015-10-31T06:25:50.000Z</updated>
    <content type="html"><![CDATA[<p>创建用于连接master的账户</p>
<figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create user replica identified <span class="keyword">by</span> <span class="string">'replica'</span>;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>
<p>在master上，为replica用户添加足够的权限</p>
<figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt;GRANT REPLICATION SLAVE, RELOAD, SUPER, <span class="keyword">CREATE</span> USER <span class="keyword">ON</span> *.* <span class="keyword">TO</span> <span class="string">'replica'</span>@<span class="string">'%'</span> <span class="keyword">with</span> GRANT OPTION;</span><br></pre></td></tr></table></figure>
<p>配置Master服务器，修改/etc/my.cnf</p>
<figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bin-<span class="command">log</span>=mysql-bin <span class="comment">#slave会基于此log-bin来做replication</span></span><br><span class="line">server-<span class="property">id</span>=<span class="number">1</span></span><br></pre></td></tr></table></figure>
<p>重启Master服务器，使配置生效</p>
<figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;service mysqld <span class="built_in">stop</span></span><br><span class="line">&gt;service mysqld <span class="built_in">start</span></span><br></pre></td></tr></table></figure>
<p>在master上，查看master当前状态</p>
<figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="header">mysql&gt; show master status;</span><br><span class="line">+-------------------+----------+--------------+------------------+</span></span><br><span class="line"><span class="header">| File              | Position | Binlog_Do_DB | Binlog_Ignore_DB |</span><br><span class="line">+-------------------+----------+--------------+------------------+</span></span><br><span class="line"><span class="header">| master-bin.000001 |      324 |              |                  |</span><br><span class="line">+-------------------+----------+--------------+------------------+</span></span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure>
<p>修改所有slave服务器上的my.cnf（修改后要重启mysql以使修改生效）</p>
<figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">server-id = <span class="number">2</span></span><br><span class="line">relay-<span class="built_in">log</span> = slave-relay-bin</span><br><span class="line">relay-<span class="built_in">log</span>-<span class="built_in">index</span> = slave-relay-bin.<span class="built_in">index</span></span><br></pre></td></tr></table></figure>
<p>在slave上，连接master</p>
<figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; CHANGE MASTER <span class="keyword">TO</span> MASTER_HOST=<span class="string">'127.0.0.1'</span>,MASTER_PORT=<span class="number">3306</span>,MASTER_USER=<span class="string">'replica'</span>,MASTER_PASSWORD=<span class="string">'replica'</span>,MASTER_LOG_FILE=<span class="string">'master-bin.000001'</span>,MASTER_LOG_POS=<span class="number">324</span><span class="comment">;</span></span><br></pre></td></tr></table></figure>
<p>启动slave（在Slave上）</p>
<figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; START SLAVE<span class="comment">;</span></span><br></pre></td></tr></table></figure>
<p>查看slave状态（在slave上）</p>
<figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SHOW SLAVE STATUS<span class="comment">;</span></span><br></pre></td></tr></table></figure>
<p>检查是否工作</p>
<figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="label">Slave_IO_Running:</span>YES</span><br><span class="line"><span class="label">Slave_SQL_Running:</span>YES</span><br></pre></td></tr></table></figure>
<p>如果都是YES,说明Slave已经正常连接到Master服务器</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>创建用于连接master的账户</p>
<figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">]]>
    </summary>
    
      <category term="mysql" scheme="http://bafeimao.net/tags/mysql/"/>
    
      <category term="replication" scheme="http://bafeimao.net/tags/replication/"/>
    
  </entry>
  
</feed>
